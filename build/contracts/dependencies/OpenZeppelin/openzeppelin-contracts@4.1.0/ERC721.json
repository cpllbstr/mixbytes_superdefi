{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Strings.sol",
    "11": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/ERC165.sol",
    "12": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/IERC165.sol",
    "2": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/ERC721.sol",
    "3": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721.sol",
    "4": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721Receiver.sol",
    "7": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "8": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Address.sol",
    "9": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        2701
      ],
      "Context": [
        3734
      ],
      "ERC165": [
        3961
      ],
      "ERC721": [
        3519
      ],
      "IERC165": [
        3973
      ],
      "IERC721": [
        3666
      ],
      "IERC721Metadata": [
        3711
      ],
      "IERC721Receiver": [
        3684
      ],
      "Strings": [
        3937
      ]
    },
    "id": 3520,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2703,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 2704,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3520,
        "sourceUnit": 3667,
        "src": "58:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 2705,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3520,
        "sourceUnit": 3685,
        "src": "82:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 2706,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3520,
        "sourceUnit": 3712,
        "src": "114:42:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 2707,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3520,
        "sourceUnit": 2702,
        "src": "157:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 2708,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3520,
        "sourceUnit": 3735,
        "src": "191:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 2709,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3520,
        "sourceUnit": 3938,
        "src": "225:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 2710,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3520,
        "sourceUnit": 3962,
        "src": "259:46:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2712,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3734,
              "src": "573:7:2"
            },
            "id": 2713,
            "nodeType": "InheritanceSpecifier",
            "src": "573:7:2"
          },
          {
            "baseName": {
              "id": 2714,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3961,
              "src": "582:6:2"
            },
            "id": 2715,
            "nodeType": "InheritanceSpecifier",
            "src": "582:6:2"
          },
          {
            "baseName": {
              "id": 2716,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3666,
              "src": "590:7:2"
            },
            "id": 2717,
            "nodeType": "InheritanceSpecifier",
            "src": "590:7:2"
          },
          {
            "baseName": {
              "id": 2718,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3711,
              "src": "599:15:2"
            },
            "id": 2719,
            "nodeType": "InheritanceSpecifier",
            "src": "599:15:2"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2711,
          "nodeType": "StructuredDocumentation",
          "src": "307:246:2",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 3519,
        "linearizedBaseContracts": [
          3519,
          3711,
          3666,
          3961,
          3973,
          3734
        ],
        "name": "ERC721",
        "nameLocation": "563:6:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 2722,
            "libraryName": {
              "id": 2720,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2701,
              "src": "627:7:2"
            },
            "nodeType": "UsingForDirective",
            "src": "621:26:2",
            "typeName": {
              "id": 2721,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 2725,
            "libraryName": {
              "id": 2723,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3937,
              "src": "658:7:2"
            },
            "nodeType": "UsingForDirective",
            "src": "652:26:2",
            "typeName": {
              "id": 2724,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "670:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2727,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "717:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 3519,
            "src": "702:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2726,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "702:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2729,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "764:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 3519,
            "src": "749:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2728,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "749:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2733,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "861:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 3519,
            "src": "824:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2732,
              "keyType": {
                "id": 2730,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "833:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "824:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2731,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "844:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2737,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "956:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 3519,
            "src": "919:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2736,
              "keyType": {
                "id": 2734,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "928:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "919:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2735,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "939:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2741,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1058:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 3519,
            "src": "1021:52:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2740,
              "keyType": {
                "id": 2738,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1030:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1021:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2739,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1041:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2747,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1183:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 3519,
            "src": "1128:73:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 2746,
              "keyType": {
                "id": 2742,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1137:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1128:46:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 2745,
                "keyType": {
                  "id": 2743,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1148:25:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 2744,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1168:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2763,
              "nodeType": "Block",
              "src": "1378:57:2",
              "statements": [
                {
                  "expression": {
                    "id": 2757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2755,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2727,
                      "src": "1388:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2756,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2750,
                      "src": "1396:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1388:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2758,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:13:2"
                },
                {
                  "expression": {
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2759,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2729,
                      "src": "1411:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2760,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2752,
                      "src": "1421:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1411:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2762,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:17:2"
                }
              ]
            },
            "documentation": {
              "id": 2748,
              "nodeType": "StructuredDocumentation",
              "src": "1208:108:2",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 2764,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2750,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1348:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2764,
                  "src": "1334:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2749,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2752,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1369:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2764,
                  "src": "1355:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2751,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1333:44:2"
            },
            "returnParameters": {
              "id": 2754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1378:0:2"
            },
            "scope": 3519,
            "src": "1321:114:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3960,
              3972
            ],
            "body": {
              "id": 2794,
              "nodeType": "Block",
              "src": "1610:180:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2775,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2767,
                          "src": "1627:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2777,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3666,
                                "src": "1647:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3666_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3666_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 2776,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1642:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1642:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$3666",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 2779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1642:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1627:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2781,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2767,
                          "src": "1683:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2783,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3711,
                                "src": "1703:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$3711_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$3711_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 2782,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1698:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1698:21:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$3711",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 2785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1698:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1683:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1627:104:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 2790,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2767,
                          "src": "1771:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 2788,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1747:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$3519_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 2789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3960,
                        "src": "1747:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 2791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1747:36:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1627:156:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2774,
                  "id": 2793,
                  "nodeType": "Return",
                  "src": "1620:163:2"
                }
              ]
            },
            "documentation": {
              "id": 2765,
              "nodeType": "StructuredDocumentation",
              "src": "1441:56:2",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 2795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1511:17:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2771,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2769,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3961,
                  "src": "1578:6:2"
                },
                {
                  "id": 2770,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3973,
                  "src": "1586:7:2"
                }
              ],
              "src": "1569:25:2"
            },
            "parameters": {
              "id": 2768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2767,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1536:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2795,
                  "src": "1529:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2766,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:20:2"
            },
            "returnParameters": {
              "id": 2774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2773,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2795,
                  "src": "1604:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2772,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1603:6:2"
            },
            "scope": 3519,
            "src": "1502:288:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3591
            ],
            "body": {
              "id": 2818,
              "nodeType": "Block",
              "src": "1930:124:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2805,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2798,
                          "src": "1948:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1965:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1957:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2806,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1957:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1957:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1948:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 2811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1969:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 2804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1940:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1940:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2813,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:74:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2814,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2737,
                      "src": "2031:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2816,
                    "indexExpression": {
                      "id": 2815,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2798,
                      "src": "2041:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2031:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2803,
                  "id": 2817,
                  "nodeType": "Return",
                  "src": "2024:23:2"
                }
              ]
            },
            "documentation": {
              "id": 2796,
              "nodeType": "StructuredDocumentation",
              "src": "1796:48:2",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1858:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2800,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1903:8:2"
            },
            "parameters": {
              "id": 2799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2798,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1876:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2819,
                  "src": "1868:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1867:15:2"
            },
            "returnParameters": {
              "id": 2803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2802,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2819,
                  "src": "1921:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:9:2"
            },
            "scope": 3519,
            "src": "1849:205:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3599
            ],
            "body": {
              "id": 2846,
              "nodeType": "Block",
              "src": "2192:154:2",
              "statements": [
                {
                  "assignments": [
                    2829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2829,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2210:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2846,
                      "src": "2202:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2828,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2202:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2833,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2830,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2733,
                      "src": "2218:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2832,
                    "indexExpression": {
                      "id": 2831,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2822,
                      "src": "2226:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2218:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2202:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2835,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2829,
                          "src": "2252:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2269:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2261:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2836,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2261:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2252:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2273:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 2834,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2244:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2244:73:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2843,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:73:2"
                },
                {
                  "expression": {
                    "id": 2844,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2829,
                    "src": "2334:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2827,
                  "id": 2845,
                  "nodeType": "Return",
                  "src": "2327:12:2"
                }
              ]
            },
            "documentation": {
              "id": 2820,
              "nodeType": "StructuredDocumentation",
              "src": "2060:46:2",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 2847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2120:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2824,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2165:8:2"
            },
            "parameters": {
              "id": 2823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2822,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2136:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2847,
                  "src": "2128:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:17:2"
            },
            "returnParameters": {
              "id": 2827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2847,
                  "src": "2183:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2183:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2182:9:2"
            },
            "scope": 3519,
            "src": "2111:235:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3696
            ],
            "body": {
              "id": 2856,
              "nodeType": "Block",
              "src": "2477:29:2",
              "statements": [
                {
                  "expression": {
                    "id": 2854,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2727,
                    "src": "2494:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2853,
                  "id": 2855,
                  "nodeType": "Return",
                  "src": "2487:12:2"
                }
              ]
            },
            "documentation": {
              "id": 2848,
              "nodeType": "StructuredDocumentation",
              "src": "2352:51:2",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 2857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2417:4:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2850,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2444:8:2"
            },
            "parameters": {
              "id": 2849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2421:2:2"
            },
            "returnParameters": {
              "id": 2853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2852,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2857,
                  "src": "2462:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2851,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2461:15:2"
            },
            "scope": 3519,
            "src": "2408:98:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3702
            ],
            "body": {
              "id": 2866,
              "nodeType": "Block",
              "src": "2641:31:2",
              "statements": [
                {
                  "expression": {
                    "id": 2864,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2729,
                    "src": "2658:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2863,
                  "id": 2865,
                  "nodeType": "Return",
                  "src": "2651:14:2"
                }
              ]
            },
            "documentation": {
              "id": 2858,
              "nodeType": "StructuredDocumentation",
              "src": "2512:53:2",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 2867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2579:6:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2860,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2608:8:2"
            },
            "parameters": {
              "id": 2859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2585:2:2"
            },
            "returnParameters": {
              "id": 2863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2867,
                  "src": "2626:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2861,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2626:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2625:15:2"
            },
            "scope": 3519,
            "src": "2570:102:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3710
            ],
            "body": {
              "id": 2908,
              "nodeType": "Block",
              "src": "2826:265:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2878,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2870,
                            "src": "2852:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2877,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3157,
                          "src": "2844:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2844:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2862:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 2876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2836:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2836:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2882,
                  "nodeType": "ExpressionStatement",
                  "src": "2836:76:2"
                },
                {
                  "assignments": [
                    2884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2884,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2937:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2908,
                      "src": "2923:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2883,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2923:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2887,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2885,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2918,
                      "src": "2947:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 2886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2947:10:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2923:34:2"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2890,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2884,
                              "src": "2980:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2974:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 2888,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2974:5:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2974:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2974:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2998:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2974:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 2905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3082:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2974:110:2",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2899,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2884,
                              "src": "3038:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2900,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2870,
                                  "src": "3047:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3819,
                                "src": "3047:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 2902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3047:18:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 2897,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3021:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3021:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 2903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3021:45:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3014:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 2895,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3014:6:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3014:53:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2875,
                  "id": 2907,
                  "nodeType": "Return",
                  "src": "2967:117:2"
                }
              ]
            },
            "documentation": {
              "id": 2868,
              "nodeType": "StructuredDocumentation",
              "src": "2678:55:2",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 2909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2747:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2872,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2793:8:2"
            },
            "parameters": {
              "id": 2871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2870,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2764:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2909,
                  "src": "2756:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2755:17:2"
            },
            "returnParameters": {
              "id": 2875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2874,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2909,
                  "src": "2811:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2873,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2811:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2810:15:2"
            },
            "scope": 3519,
            "src": "2738:353:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2917,
              "nodeType": "Block",
              "src": "3288:26:2",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 2915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3305:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 2914,
                  "id": 2916,
                  "nodeType": "Return",
                  "src": "3298:9:2"
                }
              ]
            },
            "documentation": {
              "id": 2910,
              "nodeType": "StructuredDocumentation",
              "src": "3097:120:2",
              "text": " @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n in child contracts."
            },
            "id": 2918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3231:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3239:2:2"
            },
            "returnParameters": {
              "id": 2914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2918,
                  "src": "3273:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2912,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3273:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3272:15:2"
            },
            "scope": 3519,
            "src": "3222:92:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3627
            ],
            "body": {
              "id": 2960,
              "nodeType": "Block",
              "src": "3441:318:2",
              "statements": [
                {
                  "assignments": [
                    2928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2928,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3459:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2960,
                      "src": "3451:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2927,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3451:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2933,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2931,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2923,
                        "src": "3482:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2929,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "3467:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$3519_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2847,
                      "src": "3467:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3467:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3451:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2935,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2921,
                          "src": "3508:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2936,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2928,
                          "src": "3514:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3508:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 2938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3521:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 2934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3500:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2940,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2942,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3722,
                              "src": "3576:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3576:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2944,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2928,
                            "src": "3592:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3576:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2947,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2928,
                              "src": "3618:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2948,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3722,
                                "src": "3625:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3625:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2946,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3034,
                            "src": "3601:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3601:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3576:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 2952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3652:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 2941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3568:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3568:152:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2954,
                  "nodeType": "ExpressionStatement",
                  "src": "3568:152:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2956,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2921,
                        "src": "3740:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2957,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2923,
                        "src": "3744:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2955,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3443,
                      "src": "3731:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3731:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2959,
                  "nodeType": "ExpressionStatement",
                  "src": "3731:21:2"
                }
              ]
            },
            "documentation": {
              "id": 2919,
              "nodeType": "StructuredDocumentation",
              "src": "3320:46:2",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 2961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3380:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2925,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3432:8:2"
            },
            "parameters": {
              "id": 2924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2921,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3396:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2961,
                  "src": "3388:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2923,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3408:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2961,
                  "src": "3400:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3387:29:2"
            },
            "returnParameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3441:0:2"
            },
            "scope": 3519,
            "src": "3371:388:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3635
            ],
            "body": {
              "id": 2981,
              "nodeType": "Block",
              "src": "3905:132:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2972,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2964,
                            "src": "3931:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2971,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3157,
                          "src": "3923:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3923:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3941:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 2970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3915:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3915:73:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2976,
                  "nodeType": "ExpressionStatement",
                  "src": "3915:73:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2977,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2741,
                      "src": "4006:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2979,
                    "indexExpression": {
                      "id": 2978,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2964,
                      "src": "4022:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4006:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2969,
                  "id": 2980,
                  "nodeType": "Return",
                  "src": "3999:31:2"
                }
              ]
            },
            "documentation": {
              "id": 2962,
              "nodeType": "StructuredDocumentation",
              "src": "3765:50:2",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 2982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3829:11:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2966,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3878:8:2"
            },
            "parameters": {
              "id": 2965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2964,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3849:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2982,
                  "src": "3841:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3841:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3840:17:2"
            },
            "returnParameters": {
              "id": 2969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2982,
                  "src": "3896:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3895:9:2"
            },
            "scope": 3519,
            "src": "3820:217:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3643
            ],
            "body": {
              "id": 3015,
              "nodeType": "Block",
              "src": "4188:206:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2992,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2985,
                          "src": "4206:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2993,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3722,
                            "src": "4218:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 2994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4218:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4206:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 2996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4232:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 2991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4198:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4198:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2998,
                  "nodeType": "ExpressionStatement",
                  "src": "4198:62:2"
                },
                {
                  "expression": {
                    "id": 3006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2999,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2747,
                          "src": "4271:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 3003,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3000,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3722,
                            "src": "4290:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4290:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4271:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3004,
                      "indexExpression": {
                        "id": 3002,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2985,
                        "src": "4304:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4271:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3005,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2987,
                      "src": "4316:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4271:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3007,
                  "nodeType": "ExpressionStatement",
                  "src": "4271:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3009,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3722,
                          "src": "4354:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4354:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3011,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2985,
                        "src": "4368:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3012,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2987,
                        "src": "4378:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3008,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3583,
                      "src": "4339:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 3013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3014,
                  "nodeType": "EmitStatement",
                  "src": "4334:53:2"
                }
              ]
            },
            "documentation": {
              "id": 2983,
              "nodeType": "StructuredDocumentation",
              "src": "4043:56:2",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 3016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4113:17:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2989,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4179:8:2"
            },
            "parameters": {
              "id": 2988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2985,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4139:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "4131:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4131:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2987,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4154:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "4149:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2986,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4149:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4130:33:2"
            },
            "returnParameters": {
              "id": 2990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4188:0:2"
            },
            "scope": 3519,
            "src": "4104:290:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3653
            ],
            "body": {
              "id": 3033,
              "nodeType": "Block",
              "src": "4563:59:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3027,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2747,
                        "src": "4580:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 3029,
                      "indexExpression": {
                        "id": 3028,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "4599:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4580:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3031,
                    "indexExpression": {
                      "id": 3030,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3021,
                      "src": "4606:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4580:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3026,
                  "id": 3032,
                  "nodeType": "Return",
                  "src": "4573:42:2"
                }
              ]
            },
            "documentation": {
              "id": 3017,
              "nodeType": "StructuredDocumentation",
              "src": "4400:55:2",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 3034,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4469:16:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4539:8:2"
            },
            "parameters": {
              "id": 3022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3019,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4494:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "4486:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3021,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4509:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "4501:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4485:33:2"
            },
            "returnParameters": {
              "id": 3026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "4557:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4557:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4556:6:2"
            },
            "scope": 3519,
            "src": "4460:162:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3619
            ],
            "body": {
              "id": 3060,
              "nodeType": "Block",
              "src": "4773:211:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3047,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3722,
                              "src": "4862:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4862:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3049,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3041,
                            "src": "4876:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3046,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3198,
                          "src": "4843:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 3050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4843:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 3051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4886:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 3045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4835:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4835:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "4835:103:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3055,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3037,
                        "src": "4959:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3056,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3039,
                        "src": "4965:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3057,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3041,
                        "src": "4969:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3054,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3419,
                      "src": "4949:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4949:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3059,
                  "nodeType": "ExpressionStatement",
                  "src": "4949:28:2"
                }
              ]
            },
            "documentation": {
              "id": 3035,
              "nodeType": "StructuredDocumentation",
              "src": "4628:51:2",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 3061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4693:12:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3043,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4764:8:2"
            },
            "parameters": {
              "id": 3042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3037,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4714:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3061,
                  "src": "4706:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3039,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4728:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3061,
                  "src": "4720:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3041,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4740:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3061,
                  "src": "4732:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4732:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4705:43:2"
            },
            "returnParameters": {
              "id": 3044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4773:0:2"
            },
            "scope": 3519,
            "src": "4684:300:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3609
            ],
            "body": {
              "id": 3079,
              "nodeType": "Block",
              "src": "5143:56:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3073,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3064,
                        "src": "5170:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3074,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3066,
                        "src": "5176:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3075,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3068,
                        "src": "5180:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 3076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5189:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 3072,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3080,
                        3110
                      ],
                      "referencedDeclaration": 3110,
                      "src": "5153:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5153:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3078,
                  "nodeType": "ExpressionStatement",
                  "src": "5153:39:2"
                }
              ]
            },
            "documentation": {
              "id": 3062,
              "nodeType": "StructuredDocumentation",
              "src": "4990:55:2",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 3080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5059:16:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3070,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5134:8:2"
            },
            "parameters": {
              "id": 3069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3064,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5084:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3080,
                  "src": "5076:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5076:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3066,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5098:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3080,
                  "src": "5090:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5090:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3068,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5110:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3080,
                  "src": "5102:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5102:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5075:43:2"
            },
            "returnParameters": {
              "id": 3071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5143:0:2"
            },
            "scope": 3519,
            "src": "5050:149:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3665
            ],
            "body": {
              "id": 3109,
              "nodeType": "Block",
              "src": "5378:169:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3095,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3722,
                              "src": "5415:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5415:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3097,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3087,
                            "src": "5429:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3094,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3198,
                          "src": "5396:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 3098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5396:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 3099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5439:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 3093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5388:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5388:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3101,
                  "nodeType": "ExpressionStatement",
                  "src": "5388:103:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3103,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3083,
                        "src": "5515:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3104,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3085,
                        "src": "5521:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3105,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3087,
                        "src": "5525:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3106,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3089,
                        "src": "5534:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3102,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3139,
                      "src": "5501:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5501:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3108,
                  "nodeType": "ExpressionStatement",
                  "src": "5501:39:2"
                }
              ]
            },
            "documentation": {
              "id": 3081,
              "nodeType": "StructuredDocumentation",
              "src": "5205:55:2",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 3110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5274:16:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3091,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5369:8:2"
            },
            "parameters": {
              "id": 3090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3083,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5299:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3110,
                  "src": "5291:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5291:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3085,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5313:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3110,
                  "src": "5305:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5305:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3087,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5325:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3110,
                  "src": "5317:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5317:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3089,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5347:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3110,
                  "src": "5334:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3088,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5334:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5290:63:2"
            },
            "returnParameters": {
              "id": 3092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5378:0:2"
            },
            "scope": 3519,
            "src": "5265:282:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3138,
              "nodeType": "Block",
              "src": "6512:166:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3123,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3113,
                        "src": "6532:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3124,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3115,
                        "src": "6538:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3125,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3117,
                        "src": "6542:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3122,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3419,
                      "src": "6522:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6522:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3127,
                  "nodeType": "ExpressionStatement",
                  "src": "6522:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3130,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3113,
                            "src": "6591:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3131,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3115,
                            "src": "6597:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3132,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3117,
                            "src": "6601:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3133,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3119,
                            "src": "6610:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3129,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3507,
                          "src": "6568:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 3134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6568:48:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 3135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6618:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 3128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6560:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6560:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3137,
                  "nodeType": "ExpressionStatement",
                  "src": "6560:111:2"
                }
              ]
            },
            "documentation": {
              "id": 3111,
              "nodeType": "StructuredDocumentation",
              "src": "5553:851:2",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 3139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6418:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3113,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6440:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3139,
                  "src": "6432:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6432:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3115,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6454:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3139,
                  "src": "6446:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6446:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3117,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6466:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3139,
                  "src": "6458:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3119,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6488:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3139,
                  "src": "6475:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3118,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6475:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6431:63:2"
            },
            "returnParameters": {
              "id": 3121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6512:0:2"
            },
            "scope": 3519,
            "src": "6409:269:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3156,
              "nodeType": "Block",
              "src": "7052:54:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3147,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "7069:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3149,
                      "indexExpression": {
                        "id": 3148,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3142,
                        "src": "7077:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7069:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7097:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7089:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3150,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7089:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7089:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7069:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3146,
                  "id": 3155,
                  "nodeType": "Return",
                  "src": "7062:37:2"
                }
              ]
            },
            "documentation": {
              "id": 3140,
              "nodeType": "StructuredDocumentation",
              "src": "6684:292:2",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 3157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "6990:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3142,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7006:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "6998:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6998:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6997:17:2"
            },
            "returnParameters": {
              "id": 3146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3145,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "7046:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3144,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7046:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7045:6:2"
            },
            "scope": 3519,
            "src": "6981:125:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3197,
              "nodeType": "Block",
              "src": "7363:245:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3169,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3162,
                            "src": "7389:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3168,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3157,
                          "src": "7381:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7381:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 3171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7399:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 3167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7373:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7373:73:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3173,
                  "nodeType": "ExpressionStatement",
                  "src": "7373:73:2"
                },
                {
                  "assignments": [
                    3175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3175,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7464:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 3197,
                      "src": "7456:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3174,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7456:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3180,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3178,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3162,
                        "src": "7487:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3176,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "7472:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$3519_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 3177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2847,
                      "src": "7472:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 3179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7472:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7456:39:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3181,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3160,
                              "src": "7513:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3182,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3175,
                              "src": "7524:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7513:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 3185,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3162,
                                  "src": "7545:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3184,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2982,
                                "src": "7533:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 3186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7533:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3187,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3160,
                              "src": "7557:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7533:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7513:51:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3191,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3175,
                              "src": "7585:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3192,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3160,
                              "src": "7592:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3190,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3034,
                            "src": "7568:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 3193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7568:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7513:87:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 3195,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7512:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3166,
                  "id": 3196,
                  "nodeType": "Return",
                  "src": "7505:96:2"
                }
              ]
            },
            "documentation": {
              "id": 3158,
              "nodeType": "StructuredDocumentation",
              "src": "7112:147:2",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 3198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7273:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3160,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7300:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3198,
                  "src": "7292:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7292:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3162,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7317:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3198,
                  "src": "7309:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7309:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7291:34:2"
            },
            "returnParameters": {
              "id": 3166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3198,
                  "src": "7357:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3164,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7357:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7356:6:2"
            },
            "scope": 3519,
            "src": "7264:344:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3212,
              "nodeType": "Block",
              "src": "8003:43:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3207,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3201,
                        "src": "8023:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3208,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3203,
                        "src": "8027:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 3209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8036:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 3206,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3213,
                        3242
                      ],
                      "referencedDeclaration": 3242,
                      "src": "8013:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 3210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8013:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3211,
                  "nodeType": "ExpressionStatement",
                  "src": "8013:26:2"
                }
              ]
            },
            "documentation": {
              "id": 3199,
              "nodeType": "StructuredDocumentation",
              "src": "7614:319:2",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 3213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "7947:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3201,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7965:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "7957:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3203,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7977:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "7969:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7969:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7956:29:2"
            },
            "returnParameters": {
              "id": 3205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8003:0:2"
            },
            "scope": 3519,
            "src": "7938:108:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3241,
              "nodeType": "Block",
              "src": "8352:162:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3224,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3216,
                        "src": "8368:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3225,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3218,
                        "src": "8372:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3223,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3299,
                      "src": "8362:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8362:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3227,
                  "nodeType": "ExpressionStatement",
                  "src": "8362:18:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8429:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8421:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3230,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8421:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8421:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3234,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3216,
                            "src": "8433:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3235,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3218,
                            "src": "8437:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3236,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3220,
                            "src": "8446:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3229,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3507,
                          "src": "8398:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 3237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8398:54:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 3238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8454:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 3228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8390:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8390:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3240,
                  "nodeType": "ExpressionStatement",
                  "src": "8390:117:2"
                }
              ]
            },
            "documentation": {
              "id": 3214,
              "nodeType": "StructuredDocumentation",
              "src": "8052:210:2",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 3242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8276:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3216,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8294:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3242,
                  "src": "8286:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8286:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3218,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8306:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3242,
                  "src": "8298:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8298:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3220,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8328:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3242,
                  "src": "8315:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3219,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8315:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8285:49:2"
            },
            "returnParameters": {
              "id": 3222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8352:0:2"
            },
            "scope": 3519,
            "src": "8267:247:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3298,
              "nodeType": "Block",
              "src": "8897:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3251,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3245,
                          "src": "8915:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8929:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8921:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3252,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8921:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8921:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8915:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 3257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8933:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 3250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8907:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8907:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3259,
                  "nodeType": "ExpressionStatement",
                  "src": "8907:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8986:17:2",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3262,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3247,
                              "src": "8995:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3261,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3157,
                            "src": "8987:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 3263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8987:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 3265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9005:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 3260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8978:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8978:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3267,
                  "nodeType": "ExpressionStatement",
                  "src": "8978:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9076:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9068:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9068:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9068:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3273,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3245,
                        "src": "9080:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3274,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "9084:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3268,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3518,
                      "src": "9047:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9047:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "9047:45:2"
                },
                {
                  "expression": {
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3277,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2737,
                        "src": "9103:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3279,
                      "indexExpression": {
                        "id": 3278,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3245,
                        "src": "9113:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9103:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9120:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9103:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3282,
                  "nodeType": "ExpressionStatement",
                  "src": "9103:18:2"
                },
                {
                  "expression": {
                    "id": 3287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3283,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "9131:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3285,
                      "indexExpression": {
                        "id": 3284,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "9139:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9131:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3286,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3245,
                      "src": "9150:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9131:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3288,
                  "nodeType": "ExpressionStatement",
                  "src": "9131:21:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9185:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9177:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9177:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9177:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3294,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3245,
                        "src": "9189:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3295,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "9193:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3289,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3565,
                      "src": "9168:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9168:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3297,
                  "nodeType": "EmitStatement",
                  "src": "9163:38:2"
                }
              ]
            },
            "documentation": {
              "id": 3243,
              "nodeType": "StructuredDocumentation",
              "src": "8520:311:2",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 3299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8845:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3245,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8859:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3299,
                  "src": "8851:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8851:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3247,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8871:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3299,
                  "src": "8863:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8863:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8850:29:2"
            },
            "returnParameters": {
              "id": 3249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8897:0:2"
            },
            "scope": 3519,
            "src": "8836:372:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3349,
              "nodeType": "Block",
              "src": "9474:299:2",
              "statements": [
                {
                  "assignments": [
                    3306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3306,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9492:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 3349,
                      "src": "9484:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3305,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9484:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3311,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3309,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "9515:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3307,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "9500:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$3519_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 3308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2847,
                      "src": "9500:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 3310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9500:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9484:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3313,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3306,
                        "src": "9555:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9570:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9562:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9562:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9562:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3318,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "9574:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3312,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3518,
                      "src": "9534:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9534:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3320,
                  "nodeType": "ExpressionStatement",
                  "src": "9534:48:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9637:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9629:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3322,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9629:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9629:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3326,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "9641:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3321,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3443,
                      "src": "9620:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9620:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3328,
                  "nodeType": "ExpressionStatement",
                  "src": "9620:29:2"
                },
                {
                  "expression": {
                    "id": 3333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3329,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2737,
                        "src": "9660:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3331,
                      "indexExpression": {
                        "id": 3330,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3306,
                        "src": "9670:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9660:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9680:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9660:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3334,
                  "nodeType": "ExpressionStatement",
                  "src": "9660:21:2"
                },
                {
                  "expression": {
                    "id": 3338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9691:23:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3335,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "9698:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3337,
                      "indexExpression": {
                        "id": 3336,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "9706:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9698:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3339,
                  "nodeType": "ExpressionStatement",
                  "src": "9691:23:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3341,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3306,
                        "src": "9739:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9754:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9746:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3342,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9746:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9746:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3346,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "9758:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3340,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3565,
                      "src": "9730:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9730:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3348,
                  "nodeType": "EmitStatement",
                  "src": "9725:41:2"
                }
              ]
            },
            "documentation": {
              "id": 3300,
              "nodeType": "StructuredDocumentation",
              "src": "9214:206:2",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 3350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9434:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3302,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9448:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3350,
                  "src": "9440:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9440:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9439:17:2"
            },
            "returnParameters": {
              "id": 3304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9474:0:2"
            },
            "scope": 3519,
            "src": "9425:348:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3418,
              "nodeType": "Block",
              "src": "10176:451:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3363,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3357,
                              "src": "10209:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3361,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3519,
                              "src": "10194:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$3519_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 3362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2847,
                            "src": "10194:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 3364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10194:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3365,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3353,
                          "src": "10221:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10194:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 3367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10227:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 3360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10186:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3369,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:85:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3371,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3355,
                          "src": "10289:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10303:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10295:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3372,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10295:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10295:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10289:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 3377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10307:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 3370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10281:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10281:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3379,
                  "nodeType": "ExpressionStatement",
                  "src": "10281:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3381,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3353,
                        "src": "10378:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3382,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3355,
                        "src": "10384:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3383,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3357,
                        "src": "10388:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3380,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3518,
                      "src": "10357:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10357:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3385,
                  "nodeType": "ExpressionStatement",
                  "src": "10357:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10475:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10467:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3387,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10467:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10467:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3391,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3357,
                        "src": "10479:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3386,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3443,
                      "src": "10458:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10458:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3393,
                  "nodeType": "ExpressionStatement",
                  "src": "10458:29:2"
                },
                {
                  "expression": {
                    "id": 3398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3394,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2737,
                        "src": "10498:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3396,
                      "indexExpression": {
                        "id": 3395,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3353,
                        "src": "10508:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10498:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10517:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10498:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3399,
                  "nodeType": "ExpressionStatement",
                  "src": "10498:20:2"
                },
                {
                  "expression": {
                    "id": 3404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3400,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2737,
                        "src": "10528:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3402,
                      "indexExpression": {
                        "id": 3401,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3355,
                        "src": "10538:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10528:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10545:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10528:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3405,
                  "nodeType": "ExpressionStatement",
                  "src": "10528:18:2"
                },
                {
                  "expression": {
                    "id": 3410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3406,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2733,
                        "src": "10556:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3408,
                      "indexExpression": {
                        "id": 3407,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3357,
                        "src": "10564:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10556:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3409,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3355,
                      "src": "10575:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10556:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3411,
                  "nodeType": "ExpressionStatement",
                  "src": "10556:21:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3413,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3353,
                        "src": "10602:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3414,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3355,
                        "src": "10608:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3415,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3357,
                        "src": "10612:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3412,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3565,
                      "src": "10593:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10593:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3417,
                  "nodeType": "EmitStatement",
                  "src": "10588:32:2"
                }
              ]
            },
            "documentation": {
              "id": 3351,
              "nodeType": "StructuredDocumentation",
              "src": "9779:313:2",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 3419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10106:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3353,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10124:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3419,
                  "src": "10116:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10116:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3355,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10138:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3419,
                  "src": "10130:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10130:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3357,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10150:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3419,
                  "src": "10142:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10142:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10115:43:2"
            },
            "returnParameters": {
              "id": 3359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10176:0:2"
            },
            "scope": 3519,
            "src": "10097:530:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3442,
              "nodeType": "Block",
              "src": "10802:107:2",
              "statements": [
                {
                  "expression": {
                    "id": 3431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3427,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2741,
                        "src": "10812:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3429,
                      "indexExpression": {
                        "id": 3428,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "10828:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10812:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3430,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3422,
                      "src": "10839:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10812:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3432,
                  "nodeType": "ExpressionStatement",
                  "src": "10812:29:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3436,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3424,
                            "src": "10880:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3434,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3519,
                            "src": "10865:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$3519_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 3435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2847,
                          "src": "10865:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 3437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10865:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3438,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3422,
                        "src": "10890:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3439,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "10894:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3433,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3574,
                      "src": "10856:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3441,
                  "nodeType": "EmitStatement",
                  "src": "10851:51:2"
                }
              ]
            },
            "documentation": {
              "id": 3420,
              "nodeType": "StructuredDocumentation",
              "src": "10633:100:2",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 3443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10747:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3422,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10764:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3443,
                  "src": "10756:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10756:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3424,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10776:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3443,
                  "src": "10768:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10768:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10755:29:2"
            },
            "returnParameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10802:0:2"
            },
            "scope": 3519,
            "src": "10738:171:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3506,
              "nodeType": "Block",
              "src": "11592:694:2",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3457,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3448,
                        "src": "11606:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2425,
                      "src": "11606:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 3459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11606:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3504,
                    "nodeType": "Block",
                    "src": "12244:36:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12265:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3456,
                        "id": 3503,
                        "nodeType": "Return",
                        "src": "12258:11:2"
                      }
                    ]
                  },
                  "id": 3505,
                  "nodeType": "IfStatement",
                  "src": "11602:678:2",
                  "trueBody": {
                    "id": 3501,
                    "nodeType": "Block",
                    "src": "11623:615:2",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 3481,
                              "nodeType": "Block",
                              "src": "11738:95:2",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 3479,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3473,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3471,
                                      "src": "11763:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 3475,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3448,
                                              "src": "11789:2:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 3474,
                                            "name": "IERC721Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3684,
                                            "src": "11773:15:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$3684_$",
                                              "typeString": "type(contract IERC721Receiver)"
                                            }
                                          },
                                          "id": 3476,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11773:19:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721Receiver_$3684",
                                            "typeString": "contract IERC721Receiver"
                                          }
                                        },
                                        "id": 3477,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3683,
                                        "src": "11773:36:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 3478,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "11773:45:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "11763:55:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 3456,
                                  "id": 3480,
                                  "nodeType": "Return",
                                  "src": "11756:62:2"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 3482,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 3472,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 3471,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "11730:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3482,
                                  "src": "11723:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 3470,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11723:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "11722:15:2"
                            },
                            "src": "11714:119:2"
                          },
                          {
                            "block": {
                              "id": 3498,
                              "nodeType": "Block",
                              "src": "11862:366:2",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 3486,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3484,
                                        "src": "11884:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 3487,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11884:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 3488,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11901:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "11884:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 3496,
                                    "nodeType": "Block",
                                    "src": "12011:203:2",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12110:86:2",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12147:2:2",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12151:6:2"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12143:3:2"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12143:15:2"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12166:6:2"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12160:5:2"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12160:13:2"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12136:6:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12136:38:2"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12136:38:2"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 3484,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12151:6:2",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 3484,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12166:6:2",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 3495,
                                        "nodeType": "InlineAssembly",
                                        "src": "12101:95:2"
                                      }
                                    ]
                                  },
                                  "id": 3497,
                                  "nodeType": "IfStatement",
                                  "src": "11880:334:2",
                                  "trueBody": {
                                    "id": 3494,
                                    "nodeType": "Block",
                                    "src": "11904:101:2",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 3491,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11933:52:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 3490,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "11926:6:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 3492,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11926:60:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 3493,
                                        "nodeType": "ExpressionStatement",
                                        "src": "11926:60:2"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 3499,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 3485,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 3484,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "11854:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3499,
                                  "src": "11841:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 3483,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11841:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "11840:21:2"
                            },
                            "src": "11834:394:2"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3464,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3722,
                                "src": "11678:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11678:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3466,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3446,
                              "src": "11692:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3467,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3450,
                              "src": "11698:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3468,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3452,
                              "src": "11707:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3461,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3448,
                                  "src": "11657:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3460,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3684,
                                "src": "11641:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$3684_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 3462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11641:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$3684",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 3463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3683,
                            "src": "11641:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 3469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11641:72:2",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 3500,
                        "nodeType": "TryStatement",
                        "src": "11637:591:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3444,
              "nodeType": "StructuredDocumentation",
              "src": "10915:542:2",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 3507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "11471:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3446,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11502:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3507,
                  "src": "11494:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11494:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3448,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11516:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3507,
                  "src": "11508:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11508:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3450,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11528:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3507,
                  "src": "11520:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11520:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3452,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11550:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3507,
                  "src": "11537:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3451,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11537:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11493:63:2"
            },
            "returnParameters": {
              "id": 3456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3455,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3507,
                  "src": "11582:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3454,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11582:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11581:6:2"
            },
            "scope": 3519,
            "src": "11462:824:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3517,
              "nodeType": "Block",
              "src": "12972:3:2",
              "statements": []
            },
            "documentation": {
              "id": 3508,
              "nodeType": "StructuredDocumentation",
              "src": "12292:585:2",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 3518,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12891:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3510,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12920:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3518,
                  "src": "12912:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12912:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3512,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12934:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3518,
                  "src": "12926:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12926:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3514,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12946:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 3518,
                  "src": "12938:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12938:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12911:43:2"
            },
            "returnParameters": {
              "id": 3516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12972:0:2"
            },
            "scope": 3519,
            "src": "12882:93:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3520,
        "src": "554:12423:2",
        "usedErrors": []
      }
    ],
    "src": "33:12945:2"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014c9380380620014c98339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61123880620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d4b565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dc0565b61012461011f366004610dd3565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e08565b6103a6565b005b61014f61015f366004610e32565b6104bb565b61014f610172366004610e32565b6104ec565b610124610185366004610dd3565b610507565b61019d610198366004610e6e565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e89565b610614565b61014f6101d4366004610edb565b6106d8565b6101046101e7366004610dd3565b610710565b6100e76101fa366004610fb7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fea565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fea565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b683836107f8565b505050565b6104c53382610866565b6104e15760405162461bcd60e51b815260040161038190611024565b6104b683838361095d565b6104b6838383604051806020016040528060008152506106d8565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fea565b336001600160a01b0383160361066c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106e23383610866565b6106fe5760405162461bcd60e51b815260040161038190611024565b61070a84848484610afd565b50505050565b6000818152600260205260409020546060906001600160a01b031661078f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006107a660408051602081019091526000815290565b905060008151116107c657604051806020016040528060008152506107f1565b806107d084610b30565b6040516020016107e1929190611075565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061082d82610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108df5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b60006108ea83610507565b9050806001600160a01b0316846001600160a01b031614806109255750836001600160a01b031661091a8461030c565b6001600160a01b0316145b8061095557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661097082610507565b6001600160a01b0316146109d85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b038216610a3a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610a456000826107f8565b6001600160a01b0383166000908152600360205260408120805460019290610a6e9084906110ba565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a9c9084906110d1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b0884848461095d565b610b1484848484610c31565b61070a5760405162461bcd60e51b8152600401610381906110e9565b606081600003610b575750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b815780610b6b8161113b565b9150610b7a9050600a8361116a565b9150610b5b565b60008167ffffffffffffffff811115610b9c57610b9c610ec5565b6040519080825280601f01601f191660200182016040528015610bc6576020820181803683370190505b5090505b841561095557610bdb6001836110ba565b9150610be8600a8661117e565b610bf39060306110d1565b60f81b818381518110610c0857610c08611192565b60200101906001600160f81b031916908160001a905350610c2a600a8661116a565b9450610bca565b60006001600160a01b0384163b15610d2757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c759033908990889088906004016111a8565b6020604051808303816000875af1925050508015610cb0575060408051601f3d908101601f19168201909252610cad918101906111e5565b60015b610d0d573d808015610cde576040519150601f19603f3d011682016040523d82523d6000602084013e610ce3565b606091505b508051600003610d055760405162461bcd60e51b8152600401610381906110e9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610955565b506001949350505050565b6001600160e01b031981168114610d4857600080fd5b50565b600060208284031215610d5d57600080fd5b81356107f181610d32565b60005b83811015610d83578181015183820152602001610d6b565b8381111561070a5750506000910152565b60008151808452610dac816020860160208601610d68565b601f01601f19169290920160200192915050565b6020815260006107f16020830184610d94565b600060208284031215610de557600080fd5b5035919050565b80356001600160a01b0381168114610e0357600080fd5b919050565b60008060408385031215610e1b57600080fd5b610e2483610dec565b946020939093013593505050565b600080600060608486031215610e4757600080fd5b610e5084610dec565b9250610e5e60208501610dec565b9150604084013590509250925092565b600060208284031215610e8057600080fd5b6107f182610dec565b60008060408385031215610e9c57600080fd5b610ea583610dec565b915060208301358015158114610eba57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ef157600080fd5b610efa85610dec565b9350610f0860208601610dec565b925060408501359150606085013567ffffffffffffffff80821115610f2c57600080fd5b818701915087601f830112610f4057600080fd5b813581811115610f5257610f52610ec5565b604051601f8201601f19908116603f01168101908382118183101715610f7a57610f7a610ec5565b816040528281528a6020848701011115610f9357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fca57600080fd5b610fd383610dec565b9150610fe160208401610dec565b90509250929050565b600181811c90821680610ffe57607f821691505b60208210810361101e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611087818460208801610d68565b83519083019061109b818360208801610d68565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110cc576110cc6110a4565b500390565b600082198211156110e4576110e46110a4565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161114d5761114d6110a4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261117957611179611154565b500490565b60008261118d5761118d611154565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111db90830184610d94565b9695505050505050565b6000602082840312156111f757600080fd5b81516107f181610d3256fea2646970667358221220c4892be75efe4548e287bef14852d02f8b106f8318719fda3341b32df2fcf06c64736f6c634300080d0033",
  "bytecodeSha1": "b17454a274f5a02ff18673706bc65ae0297ddc95",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "10": {
        "Strings.toString": {
          "61": [
            544,
            554,
            false
          ]
        }
      },
      "11": {},
      "12": {},
      "2": {
        "ERC721._checkOnERC721Received": {
          "60": [
            11884,
            11902,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "59": [
            6568,
            6616,
            true
          ]
        },
        "ERC721._transfer": {
          "57": [
            10194,
            10225,
            true
          ],
          "58": [
            10289,
            10305,
            true
          ]
        },
        "ERC721.approve": {
          "49": [
            3508,
            3519,
            true
          ],
          "50": [
            3576,
            3597,
            true
          ],
          "51": [
            3601,
            3638,
            true
          ]
        },
        "ERC721.balanceOf": {
          "53": [
            1948,
            1967,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "55": [
            5396,
            5437,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "54": [
            4206,
            4230,
            true
          ]
        },
        "ERC721.tokenURI": {
          "56": [
            2974,
            2999,
            true
          ]
        },
        "ERC721.transferFrom": {
          "52": [
            4843,
            4884,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "10": {
        "Strings.toString": {
          "39": [
            570,
            580
          ],
          "40": [
            686,
            694
          ],
          "41": [
            708,
            718
          ],
          "42": [
            820,
            831
          ],
          "43": [
            845,
            901
          ],
          "44": [
            915,
            926
          ]
        }
      },
      "11": {
        "ERC165.supportsInterface": {
          "2": [
            864,
            911
          ]
        }
      },
      "12": {},
      "2": {
        "ERC721._approve": {
          "26": [
            10812,
            10841
          ],
          "27": [
            10851,
            10902
          ]
        },
        "ERC721._baseURI": {
          "24": [
            3298,
            3307
          ]
        },
        "ERC721._checkOnERC721Received": {
          "46": [
            11926,
            11986
          ],
          "47": [
            11756,
            11818
          ],
          "48": [
            12258,
            12269
          ]
        },
        "ERC721._exists": {
          "4": [
            7062,
            7099
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "28": [
            7373,
            7446
          ],
          "29": [
            7505,
            7601
          ]
        },
        "ERC721._safeTransfer": {
          "37": [
            6522,
            6550
          ],
          "38": [
            6560,
            6671
          ]
        },
        "ERC721._transfer": {
          "30": [
            10186,
            10271
          ],
          "31": [
            10281,
            10346
          ],
          "32": [
            10458,
            10487
          ],
          "33": [
            10498,
            10518
          ],
          "34": [
            10528,
            10546
          ],
          "35": [
            10556,
            10577
          ],
          "36": [
            10588,
            10620
          ]
        },
        "ERC721.approve": {
          "7": [
            3500,
            3557
          ],
          "9": [
            3568,
            3720
          ],
          "10": [
            3731,
            3752
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            1940,
            2014
          ],
          "16": [
            2024,
            2047
          ]
        },
        "ERC721.getApproved": {
          "5": [
            3915,
            3988
          ],
          "6": [
            3999,
            4030
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4573,
            4615
          ]
        },
        "ERC721.name": {
          "3": [
            2487,
            2499
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2244,
            2317
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5153,
            5192
          ],
          "21": [
            5388,
            5491
          ],
          "22": [
            5501,
            5540
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4198,
            4260
          ],
          "19": [
            4271,
            4324
          ],
          "20": [
            4334,
            4387
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1620,
            1783
          ]
        },
        "ERC721.symbol": {
          "17": [
            2651,
            2665
          ]
        },
        "ERC721.tokenURI": {
          "23": [
            2836,
            2912
          ],
          "25": [
            2967,
            3084
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4835,
            4938
          ],
          "12": [
            4949,
            4977
          ]
        }
      },
      "3": {},
      "4": {},
      "7": {},
      "8": {
        "Address.isContract": {
          "45": [
            1109,
            1124
          ]
        }
      },
      "9": {
        "Context._msgSender": {
          "8": [
            658,
            675
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d4b565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dc0565b61012461011f366004610dd3565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e08565b6103a6565b005b61014f61015f366004610e32565b6104bb565b61014f610172366004610e32565b6104ec565b610124610185366004610dd3565b610507565b61019d610198366004610e6e565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e89565b610614565b61014f6101d4366004610edb565b6106d8565b6101046101e7366004610dd3565b610710565b6100e76101fa366004610fb7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fea565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fea565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b683836107f8565b505050565b6104c53382610866565b6104e15760405162461bcd60e51b815260040161038190611024565b6104b683838361095d565b6104b6838383604051806020016040528060008152506106d8565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fea565b336001600160a01b0383160361066c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106e23383610866565b6106fe5760405162461bcd60e51b815260040161038190611024565b61070a84848484610afd565b50505050565b6000818152600260205260409020546060906001600160a01b031661078f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006107a660408051602081019091526000815290565b905060008151116107c657604051806020016040528060008152506107f1565b806107d084610b30565b6040516020016107e1929190611075565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061082d82610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108df5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b60006108ea83610507565b9050806001600160a01b0316846001600160a01b031614806109255750836001600160a01b031661091a8461030c565b6001600160a01b0316145b8061095557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661097082610507565b6001600160a01b0316146109d85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b038216610a3a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610a456000826107f8565b6001600160a01b0383166000908152600360205260408120805460019290610a6e9084906110ba565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a9c9084906110d1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b0884848461095d565b610b1484848484610c31565b61070a5760405162461bcd60e51b8152600401610381906110e9565b606081600003610b575750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b815780610b6b8161113b565b9150610b7a9050600a8361116a565b9150610b5b565b60008167ffffffffffffffff811115610b9c57610b9c610ec5565b6040519080825280601f01601f191660200182016040528015610bc6576020820181803683370190505b5090505b841561095557610bdb6001836110ba565b9150610be8600a8661117e565b610bf39060306110d1565b60f81b818381518110610c0857610c08611192565b60200101906001600160f81b031916908160001a905350610c2a600a8661116a565b9450610bca565b60006001600160a01b0384163b15610d2757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c759033908990889088906004016111a8565b6020604051808303816000875af1925050508015610cb0575060408051601f3d908101601f19168201909252610cad918101906111e5565b60015b610d0d573d808015610cde576040519150601f19603f3d011682016040523d82523d6000602084013e610ce3565b606091505b508051600003610d055760405162461bcd60e51b8152600401610381906110e9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610955565b506001949350505050565b6001600160e01b031981168114610d4857600080fd5b50565b600060208284031215610d5d57600080fd5b81356107f181610d32565b60005b83811015610d83578181015183820152602001610d6b565b8381111561070a5750506000910152565b60008151808452610dac816020860160208601610d68565b601f01601f19169290920160200192915050565b6020815260006107f16020830184610d94565b600060208284031215610de557600080fd5b5035919050565b80356001600160a01b0381168114610e0357600080fd5b919050565b60008060408385031215610e1b57600080fd5b610e2483610dec565b946020939093013593505050565b600080600060608486031215610e4757600080fd5b610e5084610dec565b9250610e5e60208501610dec565b9150604084013590509250925092565b600060208284031215610e8057600080fd5b6107f182610dec565b60008060408385031215610e9c57600080fd5b610ea583610dec565b915060208301358015158114610eba57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ef157600080fd5b610efa85610dec565b9350610f0860208601610dec565b925060408501359150606085013567ffffffffffffffff80821115610f2c57600080fd5b818701915087601f830112610f4057600080fd5b813581811115610f5257610f52610ec5565b604051601f8201601f19908116603f01168101908382118183101715610f7a57610f7a610ec5565b816040528281528a6020848701011115610f9357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fca57600080fd5b610fd383610dec565b9150610fe160208401610dec565b90509250929050565b600181811c90821680610ffe57607f821691505b60208210810361101e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611087818460208801610d68565b83519083019061109b818360208801610d68565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110cc576110cc6110a4565b500390565b600082198211156110e4576110e46110a4565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161114d5761114d6110a4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261117957611179611154565b500490565b60008261118d5761118d611154565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111db90830184610d94565b9695505050505050565b6000602082840312156111f757600080fd5b81516107f181610d3256fea2646970667358221220c4892be75efe4548e287bef14852d02f8b106f8318719fda3341b32df2fcf06c64736f6c634300080d0033",
  "deployedSourceMap": "554:12423:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:288;;;;;;:::i;:::-;;:::i;:::-;;;565:14:18;;558:22;540:41;;528:2;513:18;1502:288:2;;;;;;;;2408:98;;;:::i;:::-;;;;;;;:::i;3820:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:18;;;1674:51;;1662:2;1647:18;3820:217:2;1528:203:18;3371:388:2;;;;;;:::i;:::-;;:::i;:::-;;4684:300;;;;;;:::i;:::-;;:::i;5050:149::-;;;;;;:::i;:::-;;:::i;2111:235::-;;;;;;:::i;:::-;;:::i;1849:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:18;;;2831:2;2816:18;1849:205:2;2697:177:18;2570:102:2;;;:::i;4104:290::-;;;;;;:::i;:::-;;:::i;5265:282::-;;;;;;:::i;:::-;;:::i;2738:353::-;;;;;;:::i;:::-;;:::i;4460:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4580:25:2;;;4557:4;4580:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4460:162;1502:288;1604:4;-1:-1:-1;;;;;;1627:40:2;;-1:-1:-1;;;1627:40:2;;:104;;-1:-1:-1;;;;;;;1683:48:2;;-1:-1:-1;;;1683:48:2;1627:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:11;;;1747:36:2;1620:163;1502:288;-1:-1:-1;;1502:288:2:o;2408:98::-;2462:13;2494:5;2487:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2408:98;:::o;3820:217::-;3896:7;7069:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7069:16:2;3915:73;;;;-1:-1:-1;;;3915:73:2;;5358:2:18;3915:73:2;;;5340:21:18;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:18;;;5480:42;5539:19;;3915:73:2;;;;;;;;;-1:-1:-1;4006:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4006:24:2;;3820:217::o;3371:388::-;3451:13;3467:23;3482:7;3467:14;:23::i;:::-;3451:39;;3514:5;-1:-1:-1;;;;;3508:11:2;:2;-1:-1:-1;;;;;3508:11:2;;3500:57;;;;-1:-1:-1;;;3500:57:2;;5771:2:18;3500:57:2;;;5753:21:18;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:18;;;5893:31;5941:19;;3500:57:2;5569:397:18;3500:57:2;665:10:9;-1:-1:-1;;;;;3576:21:2;;;;:62;;-1:-1:-1;3601:37:2;3618:5;665:10:9;4460:162:2;:::i;3601:37::-;3568:152;;;;-1:-1:-1;;;3568:152:2;;6173:2:18;3568:152:2;;;6155:21:18;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3568:152:2;5971:420:18;3568:152:2;3731:21;3740:2;3744:7;3731:8;:21::i;:::-;3441:318;3371:388;;:::o;4684:300::-;4843:41;665:10:9;4876:7:2;4843:18;:41::i;:::-;4835:103;;;;-1:-1:-1;;;4835:103:2;;;;;;;:::i;:::-;4949:28;4959:4;4965:2;4969:7;4949:9;:28::i;5050:149::-;5153:39;5170:4;5176:2;5180:7;5153:39;;;;;;;;;;;;:16;:39::i;2111:235::-;2183:7;2218:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2218:16:2;;2244:73;;;;-1:-1:-1;;;2244:73:2;;7016:2:18;2244:73:2;;;6998:21:18;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:18;;;7138:39;7194:19;;2244:73:2;6814:405:18;1849:205:2;1921:7;-1:-1:-1;;;;;1948:19:2;;1940:74;;;;-1:-1:-1;;;1940:74:2;;7426:2:18;1940:74:2;;;7408:21:18;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:18;;;7548:40;7605:19;;1940:74:2;7224:406:18;1940:74:2;-1:-1:-1;;;;;;2031:16:2;;;;;:9;:16;;;;;;;1849:205::o;2570:102::-;2626:13;2658:7;2651:14;;;;;:::i;4104:290::-;665:10:9;-1:-1:-1;;;;;4206:24:2;;;4198:62;;;;-1:-1:-1;;;4198:62:2;;7837:2:18;4198:62:2;;;7819:21:18;7876:2;7856:18;;;7849:30;7915:27;7895:18;;;7888:55;7960:18;;4198:62:2;7635:349:18;4198:62:2;665:10:9;4271:32:2;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4271:42:2;;;;;;;;;;;;:53;;-1:-1:-1;;4271:53:2;;;;;;;;;;4339:48;;540:41:18;;;4271:42:2;;665:10:9;4339:48:2;;513:18:18;4339:48:2;;;;;;;4104:290;;:::o;5265:282::-;5396:41;665:10:9;5429:7:2;5396:18;:41::i;:::-;5388:103;;;;-1:-1:-1;;;5388:103:2;;;;;;;:::i;:::-;5501:39;5515:4;5521:2;5525:7;5534:5;5501:13;:39::i;:::-;5265:282;;;;:::o;2738:353::-;7046:4;7069:16;;;:7;:16;;;;;;2811:13;;-1:-1:-1;;;;;7069:16:2;2836:76;;;;-1:-1:-1;;;2836:76:2;;8191:2:18;2836:76:2;;;8173:21:18;8230:2;8210:18;;;8203:30;8269:34;8249:18;;;8242:62;-1:-1:-1;;;8320:18:18;;;8313:45;8375:19;;2836:76:2;7989:411:18;2836:76:2;2923:21;2947:10;3298:9;;;;;;;;;-1:-1:-1;3298:9:2;;;3222:92;2947:10;2923:34;;2998:1;2980:7;2974:21;:25;:110;;;;;;;;;;;;;;;;;3038:7;3047:18;:7;:16;:18::i;:::-;3021:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2974:110;2967:117;2738:353;-1:-1:-1;;;2738:353:2:o;10738:171::-;10812:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;10812:29:2;-1:-1:-1;;;;;10812:29:2;;;;;;;;:24;;10865:23;10812:24;10865:14;:23::i;:::-;-1:-1:-1;;;;;10856:46:2;;;;;;;;;;;10738:171;;:::o;7264:344::-;7357:4;7069:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7069:16:2;7373:73;;;;-1:-1:-1;;;7373:73:2;;9082:2:18;7373:73:2;;;9064:21:18;9121:2;9101:18;;;9094:30;9160:34;9140:18;;;9133:62;-1:-1:-1;;;9211:18:18;;;9204:42;9263:19;;7373:73:2;8880:408:18;7373:73:2;7456:13;7472:23;7487:7;7472:14;:23::i;:::-;7456:39;;7524:5;-1:-1:-1;;;;;7513:16:2;:7;-1:-1:-1;;;;;7513:16:2;;:51;;;;7557:7;-1:-1:-1;;;;;7533:31:2;:20;7545:7;7533:11;:20::i;:::-;-1:-1:-1;;;;;7533:31:2;;7513:51;:87;;;-1:-1:-1;;;;;;4580:25:2;;;4557:4;4580:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7568:32;7505:96;7264:344;-1:-1:-1;;;;7264:344:2:o;10097:530::-;10221:4;-1:-1:-1;;;;;10194:31:2;:23;10209:7;10194:14;:23::i;:::-;-1:-1:-1;;;;;10194:31:2;;10186:85;;;;-1:-1:-1;;;10186:85:2;;9495:2:18;10186:85:2;;;9477:21:18;9534:2;9514:18;;;9507:30;9573:34;9553:18;;;9546:62;-1:-1:-1;;;9624:18:18;;;9617:39;9673:19;;10186:85:2;9293:405:18;10186:85:2;-1:-1:-1;;;;;10289:16:2;;10281:65;;;;-1:-1:-1;;;10281:65:2;;9905:2:18;10281:65:2;;;9887:21:18;9944:2;9924:18;;;9917:30;9983:34;9963:18;;;9956:62;-1:-1:-1;;;10034:18:18;;;10027:34;10078:19;;10281:65:2;9703:400:18;10281:65:2;10458:29;10475:1;10479:7;10458:8;:29::i;:::-;-1:-1:-1;;;;;10498:15:2;;;;;;:9;:15;;;;;:20;;10517:1;;10498:15;:20;;10517:1;;10498:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10528:13:2;;;;;;:9;:13;;;;;:18;;10545:1;;10528:13;:18;;10545:1;;10528:18;:::i;:::-;;;;-1:-1:-1;;10556:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10556:21:2;-1:-1:-1;;;;;10556:21:2;;;;;;;;;10593:27;;10556:16;;10593:27;;;;;;;10097:530;;;:::o;6409:269::-;6522:28;6532:4;6538:2;6542:7;6522:9;:28::i;:::-;6568:48;6591:4;6597:2;6601:7;6610:5;6568:22;:48::i;:::-;6560:111;;;;-1:-1:-1;;;6560:111:2;;;;;;;:::i;271:703:10:-;327:13;544:5;553:1;544:10;540:51;;-1:-1:-1;;570:10:10;;;;;;;;;;;;-1:-1:-1;;;570:10:10;;;;;271:703::o;540:51::-;615:5;600:12;654:75;661:9;;654:75;;686:8;;;;:::i;:::-;;-1:-1:-1;708:10:10;;-1:-1:-1;716:2:10;708:10;;:::i;:::-;;;654:75;;;738:19;770:6;760:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;760:17:10;;738:39;;787:150;794:10;;787:150;;820:11;830:1;820:11;;:::i;:::-;;-1:-1:-1;888:10:10;896:2;888:5;:10;:::i;:::-;875:24;;:2;:24;:::i;:::-;862:39;;845:6;852;845:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;845:56:10;;;;;;;;-1:-1:-1;915:11:10;924:2;915:11;;:::i;:::-;;;787:150;;11462:824:2;11582:4;-1:-1:-1;;;;;11606:13:2;;1078:20:8;1116:8;11602:678:2;;11641:72;;-1:-1:-1;;;11641:72:2;;-1:-1:-1;;;;;11641:36:2;;;;;:72;;665:10:9;;11692:4:2;;11698:7;;11707:5;;11641:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11641:72:2;;;;;;;;-1:-1:-1;;11641:72:2;;;;;;;;;;;;:::i;:::-;;;11637:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11884:6;:13;11901:1;11884:18;11880:334;;11926:60;;-1:-1:-1;;;11926:60:2;;;;;;;:::i;11880:334::-;12166:6;12160:13;12151:6;12147:2;12143:15;12136:38;11637:591;-1:-1:-1;;;;;;11763:55:2;-1:-1:-1;;;11763:55:2;;-1:-1:-1;11756:62:2;;11602:678;-1:-1:-1;12265:4:2;11462:824;;;;;;:::o;14:131:18:-;-1:-1:-1;;;;;;88:32:18;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:18;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:18;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:18:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:18;;1343:180;-1:-1:-1;1343:180:18:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:18;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:18:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:18;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:18;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8405:470::-;8584:3;8622:6;8616:13;8638:53;8684:6;8679:3;8672:4;8664:6;8660:17;8638:53;:::i;:::-;8754:13;;8713:16;;;;8776:57;8754:13;8713:16;8810:4;8798:17;;8776:57;:::i;:::-;8849:20;;8405:470;-1:-1:-1;;;;8405:470:18:o;10108:127::-;10169:10;10164:3;10160:20;10157:1;10150:31;10200:4;10197:1;10190:15;10224:4;10221:1;10214:15;10240:125;10280:4;10308:1;10305;10302:8;10299:34;;;10313:18;;:::i;:::-;-1:-1:-1;10350:9:18;;10240:125::o;10370:128::-;10410:3;10441:1;10437:6;10434:1;10431:13;10428:39;;;10447:18;;:::i;:::-;-1:-1:-1;10483:9:18;;10370:128::o;10503:414::-;10705:2;10687:21;;;10744:2;10724:18;;;10717:30;10783:34;10778:2;10763:18;;10756:62;-1:-1:-1;;;10849:2:18;10834:18;;10827:48;10907:3;10892:19;;10503:414::o;10922:135::-;10961:3;10982:17;;;10979:43;;11002:18;;:::i;:::-;-1:-1:-1;11049:1:18;11038:13;;10922:135::o;11062:127::-;11123:10;11118:3;11114:20;11111:1;11104:31;11154:4;11151:1;11144:15;11178:4;11175:1;11168:15;11194:120;11234:1;11260;11250:35;;11265:18;;:::i;:::-;-1:-1:-1;11299:9:18;;11194:120::o;11319:112::-;11351:1;11377;11367:35;;11382:18;;:::i;:::-;-1:-1:-1;11416:9:18;;11319:112::o;11436:127::-;11497:10;11492:3;11488:20;11485:1;11478:31;11528:4;11525:1;11518:15;11552:4;11549:1;11542:15;11568:489;-1:-1:-1;;;;;11837:15:18;;;11819:34;;11889:15;;11884:2;11869:18;;11862:43;11936:2;11921:18;;11914:34;;;11984:3;11979:2;11964:18;;11957:31;;;11762:4;;12005:46;;12031:19;;12023:6;12005:46;:::i;:::-;11997:54;11568:489;-1:-1:-1;;;;;;11568:489:18:o;12062:249::-;12131:6;12184:2;12172:9;12163:7;12159:23;12155:32;12152:52;;;12200:1;12197;12190:12;12152:52;12232:9;12226:16;12251:30;12275:5;12251:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    554,
    12977
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE08 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE89 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDB JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x7F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x95D JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFEA JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6E2 CALLER DUP4 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x70A DUP5 DUP5 DUP5 DUP5 PUSH2 0xAFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A6 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F1 JUMP JUMPDEST DUP1 PUSH2 0x7D0 DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7E1 SWAP3 SWAP2 SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x82D DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EA DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x925 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91A DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x955 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x970 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xA45 PUSH1 0x0 DUP3 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA6E SWAP1 DUP5 SWAP1 PUSH2 0x10BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA9C SWAP1 DUP5 SWAP1 PUSH2 0x10D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xB08 DUP5 DUP5 DUP5 PUSH2 0x95D JUMP JUMPDEST PUSH2 0xB14 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB57 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB81 JUMPI DUP1 PUSH2 0xB6B DUP2 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP PUSH2 0xB7A SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x116A JUMP JUMPDEST SWAP2 POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB9C PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x955 JUMPI PUSH2 0xBDB PUSH1 0x1 DUP4 PUSH2 0x10BA JUMP JUMPDEST SWAP2 POP PUSH2 0xBE8 PUSH1 0xA DUP7 PUSH2 0x117E JUMP JUMPDEST PUSH2 0xBF3 SWAP1 PUSH1 0x30 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC08 JUMPI PUSH2 0xC08 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC2A PUSH1 0xA DUP7 PUSH2 0x116A JUMP JUMPDEST SWAP5 POP PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC75 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCB0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCAD SWAP2 DUP2 ADD SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD0D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCDE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x955 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7F1 DUP2 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD83 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD6B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDAC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD68 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7F1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE24 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE50 DUP5 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP PUSH2 0xE5E PUSH1 0x20 DUP6 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F1 DUP3 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA5 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFA DUP6 PUSH2 0xDEC JUMP JUMPDEST SWAP4 POP PUSH2 0xF08 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF52 JUMPI PUSH2 0xF52 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF7A JUMPI PUSH2 0xF7A PUSH2 0xEC5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD3 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH2 0xFE1 PUSH1 0x20 DUP5 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFFE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x101E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1087 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD68 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x109B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD68 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10CC JUMPI PUSH2 0x10CC PUSH2 0x10A4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10E4 JUMPI PUSH2 0x10E4 PUSH2 0x10A4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x114D JUMPI PUSH2 0x114D PUSH2 0x10A4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1179 JUMPI PUSH2 0x1179 PUSH2 0x1154 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x1154 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11DB SWAP1 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7F1 DUP2 PUSH2 0xD32 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 DUP10 0x2B 0xE7 0x5E INVALID GASLIMIT BASEFEE 0xE2 DUP8 0xBE CALL BASEFEE MSTORE 0xD0 0x2F DUP12 LT PUSH16 0x8318719FDA3341B32DF2FCF06C64736F PUSH13 0x634300080D0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "GT",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "104": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "139": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "2"
    },
    "140": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "142": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "153": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "164": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "175": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "185": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "186": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "192": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "197": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "EQ",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "207": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        554,
        12977
      ],
      "op": "REVERT",
      "path": "2"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD4B"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMP",
      "path": "2"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMP",
      "path": "2"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "DUP1",
      "path": "2"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SUB",
      "path": "2"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "RETURN",
      "path": "2"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMP",
      "path": "2"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDC0"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMP",
      "path": "2"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD3"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMP",
      "path": "2"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMP",
      "path": "2"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE08"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "STOP",
      "path": "2"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE32"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMP",
      "path": "2"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BB"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMP",
      "path": "2"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE32"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMP",
      "path": "2"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EC"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMP",
      "path": "2"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD3"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMP",
      "path": "2"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x507"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMP",
      "path": "2"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6E"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMP",
      "path": "2"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57E"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMP",
      "path": "2"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x605"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2570,
        2672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE89"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x614"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEDB"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMP",
      "path": "2"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D8"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMP",
      "path": "2"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD3"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x710"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB7"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "2"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "AND",
      "path": "2"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4557,
        4561
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "2"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "DUP3",
      "path": "2"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "2"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "2"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1604,
        1608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "AND",
      "path": "2"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "EQ",
      "path": "2"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1667
      ],
      "op": "DUP1",
      "path": "2"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1731
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1683,
        1731
      ],
      "op": "DUP3",
      "path": "2"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1683,
        1731
      ],
      "op": "AND",
      "path": "2"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1683,
        1731
      ],
      "op": "EQ",
      "path": "2"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1731
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1783
      ],
      "op": "DUP1",
      "path": "2"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1783
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1627,
        1783
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "11"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "11"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1747,
        1783
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1620,
        1783
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1502,
        1790
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1502,
        1790
      ],
      "op": "JUMP",
      "path": "2"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2462,
        2475
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2494,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "2"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFEA"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "2"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "2"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "2"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DIV",
      "path": "2"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MUL",
      "path": "2"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "2"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "2"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFEA"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "2"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "2"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "2"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "LT",
      "path": "2"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "2"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP4",
      "path": "2"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DIV",
      "path": "2"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MUL",
      "path": "2"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP4",
      "path": "2"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "2"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP1",
      "path": "2"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP4",
      "path": "2"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "GT",
      "path": "2"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SUB",
      "path": "2"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "AND",
      "path": "2"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "2"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "2"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "2"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "2"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "2"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2487,
        2499
      ],
      "op": "POP",
      "path": "2"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2408,
        2506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2408,
        2506
      ],
      "op": "JUMP",
      "path": "2"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        3896,
        3903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "AND",
      "path": "2"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "DUP2",
      "path": "2"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "DUP3",
      "path": "2"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "ADD",
      "path": "2"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "DUP1",
      "path": "2"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "SUB",
      "path": "2"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        3915,
        3988
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "DUP2",
      "path": "2"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "AND",
      "path": "2"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        4006,
        4030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3820,
        4037
      ],
      "op": "JUMP",
      "path": "2"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3451,
        3464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3482,
        3489
      ],
      "op": "DUP3",
      "path": "2"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x507"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3467,
        3490
      ],
      "op": "JUMP",
      "path": "2"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3490
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3451,
        3490
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3451,
        3490
      ],
      "op": "POP",
      "path": "2"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3514,
        3519
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "AND",
      "path": "2"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3510
      ],
      "op": "DUP4",
      "path": "2"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "AND",
      "path": "2"
    },
    "968": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3508,
        3519
      ],
      "op": "SUB",
      "path": "2"
    },
    "969": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41E"
    },
    "972": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "973": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "975": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "987": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "989": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "DUP3",
      "path": "2"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "ADD",
      "path": "2"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1044": {
      "op": "DUP3"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1053": {
      "op": "JUMP"
    },
    "1054": {
      "fn": "ERC721.approve",
      "offset": [
        3500,
        3557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1055": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 8
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 9
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "AND",
      "path": "2"
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "EQ",
      "path": "2"
    },
    "1067": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1068": {
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3638
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43A"
    },
    "1071": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3576,
        3638
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "fn": "ERC721.approve",
      "offset": [
        3601,
        3638
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43A"
    },
    "1076": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3623
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1077": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1078": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FA"
    },
    "1081": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1082": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3601,
        3638
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1083": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AC"
    },
    "1086": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1089": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "ADD",
      "path": "2"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "fn": "ERC721.approve",
      "offset": [
        3568,
        3720
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        3731,
        3752
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x4B6"
    },
    "1200": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3742
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        3744,
        3751
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        3731,
        3739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F8"
    },
    "1205": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3731,
        3752
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1206": {
      "fn": "ERC721.approve",
      "offset": [
        3731,
        3752
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        3441,
        3759
      ],
      "op": "POP",
      "path": "2"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "POP",
      "path": "2"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3371,
        3759
      ],
      "op": "POP",
      "path": "2"
    },
    "1210": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3371,
        3759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        4984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4843,
        4884
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x4C5"
    },
    "1215": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1216": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4876,
        4883
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4843,
        4861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x866"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4843,
        4884
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1221": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4843,
        4884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E1"
    },
    "1225": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "ADD",
      "path": "2"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1024"
    },
    "1248": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4835,
        4938
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4835,
        4938
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4949,
        4977
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 12,
      "value": "0x4B6"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4959,
        4963
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4965,
        4967
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4969,
        4976
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4949,
        4958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95D"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4949,
        4977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1260": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5050,
        5199
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0x4B6"
    },
    "1264": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5170,
        5174
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5176,
        5178
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5180,
        5187
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1269": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1273": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "ADD",
      "path": "2"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1280": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5192
      ],
      "op": "POP",
      "path": "2"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5153,
        5169
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D8"
    },
    "1286": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5153,
        5192
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2111,
        2346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2183,
        2190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1295": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1297": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1300": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "AND",
      "path": "2"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2218,
        2234
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1313": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x274"
    },
    "1316": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1317": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1319": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1331": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1333": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "ADD",
      "path": "2"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1340": {
      "op": "DUP3"
    },
    "1341": {
      "op": "ADD"
    },
    "1342": {
      "op": "MSTORE"
    },
    "1343": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1378": {
      "op": "DUP3"
    },
    "1379": {
      "op": "ADD"
    },
    "1380": {
      "op": "MSTORE"
    },
    "1381": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1396": {
      "op": "DUP3"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "op": "MSTORE"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1401": {
      "op": "ADD"
    },
    "1402": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2244,
        2317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1405": {
      "op": "JUMP"
    },
    "1406": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1921,
        1928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "op": "SUB"
    },
    "1417": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1948,
        1967
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 15
    },
    "1418": {
      "branch": 53,
      "fn": "ERC721.balanceOf",
      "offset": [
        1948,
        1967
      ],
      "op": "AND",
      "path": "2"
    },
    "1419": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E9"
    },
    "1422": {
      "branch": 53,
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1425": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1439": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "ADD",
      "path": "2"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1484": {
      "op": "DUP3"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "op": "MSTORE"
    },
    "1487": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1512": {
      "op": "JUMP"
    },
    "1513": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1940,
        2014
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1514": {
      "op": "POP"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1521": {
      "op": "SHL"
    },
    "1522": {
      "op": "SUB"
    },
    "1523": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "AND",
      "path": "2",
      "statement": 16
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1526": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1531": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1533": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1536": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2031,
        2047
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1849,
        2054
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1541": {
      "fn": "ERC721.symbol",
      "offset": [
        2570,
        2672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        2626,
        2639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1544": {
      "fn": "ERC721.symbol",
      "offset": [
        2658,
        2665
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x1"
    },
    "1546": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289"
    },
    "1551": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        2651,
        2665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFEA"
    },
    "1555": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2651,
        2665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1556": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1557": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1564": {
      "op": "SHL"
    },
    "1565": {
      "op": "SUB"
    },
    "1566": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 18
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "AND",
      "path": "2"
    },
    "1568": {
      "branch": 54,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4206,
        4230
      ],
      "op": "SUB",
      "path": "2"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66C"
    },
    "1572": {
      "branch": 54,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1573": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1575": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1584": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1589": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1590": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "ADD",
      "path": "2"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1634": {
      "op": "DUP3"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1643": {
      "op": "JUMP"
    },
    "1644": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4198,
        4260
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1645": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1646": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x0"
    },
    "1648": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1649": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1650": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1651": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1653": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1655": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1656": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1657": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1658": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1660": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1661": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1662": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4303
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "op": "SUB"
    },
    "1671": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1672": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "AND",
      "path": "2"
    },
    "1673": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1674": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1675": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1676": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1677": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1678": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1679": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1680": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1681": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1682": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1683": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1684": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1687": {
      "op": "NOT"
    },
    "1688": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "AND",
      "path": "2"
    },
    "1689": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1690": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1691": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1692": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "OR",
      "path": "2"
    },
    "1695": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4324
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1698": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 20
    },
    "1699": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1700": {
      "op": "SWAP1"
    },
    "1701": {
      "op": "DUP2"
    },
    "1702": {
      "op": "MSTORE"
    },
    "1703": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1704": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4271,
        4313
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1705": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1739": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1743": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1744": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1745": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1746": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SUB",
      "path": "2"
    },
    "1747": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1748": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4339,
        4387
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1749": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "POP",
      "path": "2"
    },
    "1750": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4104,
        4394
      ],
      "op": "POP",
      "path": "2"
    },
    "1751": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4104,
        4394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1752": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1753": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5396,
        5437
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0x6E2"
    },
    "1756": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1757": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5429,
        5436
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1758": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5396,
        5414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x866"
    },
    "1761": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5396,
        5437
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1762": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5396,
        5437
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1763": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FE"
    },
    "1766": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1767": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1770": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1778": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1779": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1781": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "ADD",
      "path": "2"
    },
    "1782": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1785": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1786": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1024"
    },
    "1789": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5388,
        5491
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1790": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5388,
        5491
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1791": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5501,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 22,
      "value": "0x70A"
    },
    "1794": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5515,
        5519
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1795": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5523
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1796": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5525,
        5532
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1797": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5534,
        5539
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1798": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5501,
        5514
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAFD"
    },
    "1801": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5501,
        5540
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1802": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5501,
        5540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1803": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "2"
    },
    "1804": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "2"
    },
    "1805": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "2"
    },
    "1806": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5265,
        5547
      ],
      "op": "POP",
      "path": "2"
    },
    "1807": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5265,
        5547
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1809": {
      "fn": "ERC721._exists",
      "offset": [
        7046,
        7050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1811": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1812": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1813": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1814": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1816": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1818": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1819": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1821": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1822": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1823": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1824": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2811,
        2824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2811,
        2824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1833": {
      "op": "SHL"
    },
    "1834": {
      "op": "SUB"
    },
    "1835": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "AND",
      "path": "2"
    },
    "1836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 23,
      "value": "0x78F"
    },
    "1839": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1843": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1856": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1857": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "ADD",
      "path": "2"
    },
    "1858": {
      "op": "MSTORE"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1863": {
      "op": "DUP3"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "MSTORE"
    },
    "1866": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1901": {
      "op": "DUP3"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "op": "MSTORE"
    },
    "1904": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1922": {
      "op": "SHL"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1925": {
      "op": "DUP3"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "MSTORE"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1930": {
      "op": "ADD"
    },
    "1931": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1934": {
      "op": "JUMP"
    },
    "1935": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2836,
        2912
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1936": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2923,
        2944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1938": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2947,
        2957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A6"
    },
    "1941": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0x40"
    },
    "1943": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1944": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1945": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1947": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1948": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "ADD",
      "path": "2"
    },
    "1949": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1950": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1951": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1954": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1955": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1956": {
      "fn": "ERC721._baseURI",
      "offset": [
        3298,
        3307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1957": {
      "fn": "ERC721._baseURI",
      "offset": [
        3222,
        3314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1958": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2947,
        2957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1959": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2923,
        2957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2923,
        2957
      ],
      "op": "POP",
      "path": "2"
    },
    "1961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2998,
        2999
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 25,
      "value": "0x0"
    },
    "1963": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        2987
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1964": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        2995
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1965": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        2999
      ],
      "op": "GT",
      "path": "2"
    },
    "1966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C6"
    },
    "1969": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1970": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1972": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1973": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1974": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1976": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "ADD",
      "path": "2"
    },
    "1977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1979": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1980": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1984": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "POP",
      "path": "2"
    },
    "1986": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F1"
    },
    "1989": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1990": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3038,
        3045
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D0"
    },
    "1995": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3054
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1996": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB30"
    },
    "1999": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3047,
        3065
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2000": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2001": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2004": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "ADD",
      "path": "2"
    },
    "2007": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E1"
    },
    "2010": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2011": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1075"
    },
    "2016": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3021,
        3066
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2017": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2018": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2020": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2021": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2023": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2024": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2025": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SUB",
      "path": "2"
    },
    "2026": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SUB",
      "path": "2"
    },
    "2027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2028": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2030": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2032": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3021,
        3066
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2033": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2974,
        3084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2034": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2967,
        3084
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2738,
        3091
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "op": "POP"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2738,
        3091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2040": {
      "fn": "ERC721._approve",
      "offset": [
        10738,
        10909
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2041": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0x0"
    },
    "2043": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2044": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2045": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2046": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2048": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2050": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2051": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2053": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2054": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2055": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2056": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "op": "SUB"
    },
    "2065": {
      "op": "NOT"
    },
    "2066": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "AND",
      "path": "2"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2073": {
      "op": "SHL"
    },
    "2074": {
      "op": "SUB"
    },
    "2075": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2076": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "AND",
      "path": "2"
    },
    "2077": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2078": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2079": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "OR",
      "path": "2"
    },
    "2080": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2081": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2082": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10841
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2083": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2084": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2085": {
      "fn": "ERC721._approve",
      "offset": [
        10865,
        10888
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 27,
      "value": "0x82D"
    },
    "2088": {
      "fn": "ERC721._approve",
      "offset": [
        10812,
        10836
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2089": {
      "fn": "ERC721._approve",
      "offset": [
        10865,
        10879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x507"
    },
    "2092": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        10865,
        10888
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2093": {
      "fn": "ERC721._approve",
      "offset": [
        10865,
        10888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "op": "SUB"
    },
    "2102": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "AND",
      "path": "2"
    },
    "2103": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2136": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2138": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2139": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2141": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2142": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2143": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2144": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "SUB",
      "path": "2"
    },
    "2145": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2146": {
      "fn": "ERC721._approve",
      "offset": [
        10856,
        10902
      ],
      "op": "LOG4",
      "path": "2"
    },
    "2147": {
      "fn": "ERC721._approve",
      "offset": [
        10738,
        10909
      ],
      "op": "POP",
      "path": "2"
    },
    "2148": {
      "fn": "ERC721._approve",
      "offset": [
        10738,
        10909
      ],
      "op": "POP",
      "path": "2"
    },
    "2149": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10738,
        10909
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2150": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7264,
        7608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2151": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7357,
        7361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2153": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2154": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2155": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2156": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2158": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2160": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2161": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2163": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2164": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2165": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "op": "SUB"
    },
    "2174": {
      "fn": "ERC721._exists",
      "offset": [
        7069,
        7085
      ],
      "op": "AND",
      "path": "2"
    },
    "2175": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0x8DF"
    },
    "2178": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2179": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2182": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2188": {
      "op": "SHL"
    },
    "2189": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2190": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2193": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2196": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "ADD",
      "path": "2"
    },
    "2197": {
      "op": "MSTORE"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2202": {
      "op": "DUP3"
    },
    "2203": {
      "op": "ADD"
    },
    "2204": {
      "op": "MSTORE"
    },
    "2205": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2240": {
      "op": "DUP3"
    },
    "2241": {
      "op": "ADD"
    },
    "2242": {
      "op": "MSTORE"
    },
    "2243": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2261": {
      "op": "DUP3"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "MSTORE"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2266": {
      "op": "ADD"
    },
    "2267": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "2270": {
      "op": "JUMP"
    },
    "2271": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7373,
        7446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2272": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7456,
        7469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7472,
        7495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8EA"
    },
    "2277": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7487,
        7494
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2278": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7472,
        7486
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x507"
    },
    "2281": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7472,
        7495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2282": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7472,
        7495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2283": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7456,
        7495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2284": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7456,
        7495
      ],
      "op": "POP",
      "path": "2"
    },
    "2285": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7524,
        7529
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 29
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "SUB"
    },
    "2294": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7529
      ],
      "op": "AND",
      "path": "2"
    },
    "2295": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7520
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2302": {
      "op": "SHL"
    },
    "2303": {
      "op": "SUB"
    },
    "2304": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7529
      ],
      "op": "AND",
      "path": "2"
    },
    "2305": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7529
      ],
      "op": "EQ",
      "path": "2"
    },
    "2306": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2307": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x925"
    },
    "2310": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "POP",
      "path": "2"
    },
    "2312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7557,
        7564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2319": {
      "op": "SHL"
    },
    "2320": {
      "op": "SUB"
    },
    "2321": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7564
      ],
      "op": "AND",
      "path": "2"
    },
    "2322": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91A"
    },
    "2325": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7545,
        7552
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2326": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30C"
    },
    "2329": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7533,
        7553
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2330": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7553
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2337": {
      "op": "SHL"
    },
    "2338": {
      "op": "SUB"
    },
    "2339": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7564
      ],
      "op": "AND",
      "path": "2"
    },
    "2340": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7533,
        7564
      ],
      "op": "EQ",
      "path": "2"
    },
    "2341": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2342": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2343": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x955"
    },
    "2346": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7600
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2347": {
      "op": "POP"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2357": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2358": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "AND",
      "path": "2"
    },
    "2359": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4557,
        4561
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2361": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2362": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2363": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2364": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2366": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2368": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2369": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2370": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2371": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2373": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2374": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2375": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2376": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2377": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "2"
    },
    "2379": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2380": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2382": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2383": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2386": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2388": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "2"
    },
    "2389": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7568,
        7600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2390": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7601
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2391": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7264,
        7608
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2392": {
      "op": "POP"
    },
    "2393": {
      "op": "POP"
    },
    "2394": {
      "op": "POP"
    },
    "2395": {
      "op": "POP"
    },
    "2396": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7264,
        7608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2397": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2398": {
      "fn": "ERC721._transfer",
      "offset": [
        10221,
        10225
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 30
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2405": {
      "op": "SHL"
    },
    "2406": {
      "op": "SUB"
    },
    "2407": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10225
      ],
      "op": "AND",
      "path": "2"
    },
    "2408": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x970"
    },
    "2411": {
      "fn": "ERC721._transfer",
      "offset": [
        10209,
        10216
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2412": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x507"
    },
    "2415": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10194,
        10217
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2416": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10217
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "op": "SUB"
    },
    "2425": {
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10225
      ],
      "op": "AND",
      "path": "2"
    },
    "2426": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10194,
        10225
      ],
      "op": "EQ",
      "path": "2"
    },
    "2427": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D8"
    },
    "2430": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2431": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2440": {
      "op": "SHL"
    },
    "2441": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2442": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2445": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2447": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "ADD",
      "path": "2"
    },
    "2449": {
      "op": "MSTORE"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2454": {
      "op": "DUP3"
    },
    "2455": {
      "op": "ADD"
    },
    "2456": {
      "op": "MSTORE"
    },
    "2457": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2492": {
      "op": "DUP3"
    },
    "2493": {
      "op": "ADD"
    },
    "2494": {
      "op": "MSTORE"
    },
    "2495": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2507": {
      "op": "SHL"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2510": {
      "op": "DUP3"
    },
    "2511": {
      "op": "ADD"
    },
    "2512": {
      "op": "MSTORE"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2515": {
      "op": "ADD"
    },
    "2516": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "2519": {
      "op": "JUMP"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        10186,
        10271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "op": "SUB"
    },
    "2529": {
      "fn": "ERC721._transfer",
      "offset": [
        10289,
        10305
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 31
    },
    "2530": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10289,
        10305
      ],
      "op": "AND",
      "path": "2"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3A"
    },
    "2534": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2535": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2544": {
      "op": "SHL"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2549": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "ADD",
      "path": "2"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2556": {
      "op": "DUP1"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "ADD"
    },
    "2559": {
      "op": "MSTORE"
    },
    "2560": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2595": {
      "op": "DUP3"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "MSTORE"
    },
    "2598": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2605": {
      "op": "SHL"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2608": {
      "op": "DUP3"
    },
    "2609": {
      "op": "ADD"
    },
    "2610": {
      "op": "MSTORE"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2613": {
      "op": "ADD"
    },
    "2614": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "2617": {
      "op": "JUMP"
    },
    "2618": {
      "fn": "ERC721._transfer",
      "offset": [
        10281,
        10346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2619": {
      "fn": "ERC721._transfer",
      "offset": [
        10458,
        10487
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 32,
      "value": "0xA45"
    },
    "2622": {
      "fn": "ERC721._transfer",
      "offset": [
        10475,
        10476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2624": {
      "fn": "ERC721._transfer",
      "offset": [
        10479,
        10486
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2625": {
      "fn": "ERC721._transfer",
      "offset": [
        10458,
        10466
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F8"
    },
    "2628": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10458,
        10487
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2629": {
      "fn": "ERC721._transfer",
      "offset": [
        10458,
        10487
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "op": "SUB"
    },
    "2638": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 33
    },
    "2639": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "AND",
      "path": "2"
    },
    "2640": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2642": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2643": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2644": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2645": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10507
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2647": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2649": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2650": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2652": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2653": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2654": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2655": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2656": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2658": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2659": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10513
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2660": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6E"
    },
    "2663": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2664": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2665": {
      "fn": "ERC721._transfer",
      "offset": [
        10517,
        10518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2666": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10BA"
    },
    "2669": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10498,
        10518
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2670": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2671": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2672": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2673": {
      "fn": "ERC721._transfer",
      "offset": [
        10498,
        10518
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "op": "SUB"
    },
    "2684": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 34
    },
    "2685": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "AND",
      "path": "2"
    },
    "2686": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2688": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2689": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2690": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2691": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2693": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2695": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2696": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2698": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2699": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2700": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2701": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2702": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2704": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2705": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10541
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2706": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9C"
    },
    "2709": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2710": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2711": {
      "fn": "ERC721._transfer",
      "offset": [
        10545,
        10546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2712": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D1"
    },
    "2715": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10528,
        10546
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2716": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2717": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2718": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2719": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10546
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2720": {
      "op": "POP"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x0"
    },
    "2724": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2725": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2726": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2727": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2729": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2731": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2732": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2734": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2735": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2736": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2737": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2738": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "op": "SUB"
    },
    "2747": {
      "op": "NOT"
    },
    "2748": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "AND",
      "path": "2"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2755": {
      "op": "SHL"
    },
    "2756": {
      "op": "SUB"
    },
    "2757": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2758": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2759": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "AND",
      "path": "2"
    },
    "2760": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2761": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2762": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "OR",
      "path": "2"
    },
    "2763": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2764": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2765": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10577
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2766": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 36
    },
    "2767": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2768": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2769": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10572
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2770": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2771": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2772": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "AND",
      "path": "2"
    },
    "2773": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2774": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2807": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2808": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10620
      ],
      "op": "LOG4",
      "path": "2"
    },
    "2809": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "POP",
      "path": "2"
    },
    "2810": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "POP",
      "path": "2"
    },
    "2811": {
      "fn": "ERC721._transfer",
      "offset": [
        10097,
        10627
      ],
      "op": "POP",
      "path": "2"
    },
    "2812": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10097,
        10627
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2813": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6409,
        6678
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2814": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6522,
        6550
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 37,
      "value": "0xB08"
    },
    "2817": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6532,
        6536
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2818": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6538,
        6540
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2819": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6542,
        6549
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2820": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6522,
        6531
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95D"
    },
    "2823": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6522,
        6550
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2824": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6522,
        6550
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2825": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6568,
        6616
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 38,
      "value": "0xB14"
    },
    "2828": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6591,
        6595
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2829": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6597,
        6599
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2830": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6601,
        6608
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2831": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6610,
        6615
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2832": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6568,
        6590
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC31"
    },
    "2835": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6568,
        6616
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2836": {
      "branch": 59,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6568,
        6616
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2837": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70A"
    },
    "2840": {
      "branch": 59,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2841": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2843": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2850": {
      "op": "SHL"
    },
    "2851": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2852": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "ADD",
      "path": "2"
    },
    "2856": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "2859": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2860": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6560,
        6671
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E9"
    },
    "2863": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6560,
        6671
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2864": {
      "fn": "Strings.toString",
      "offset": [
        271,
        974
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2865": {
      "fn": "Strings.toString",
      "offset": [
        327,
        340
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2867": {
      "fn": "Strings.toString",
      "offset": [
        544,
        549
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2868": {
      "fn": "Strings.toString",
      "offset": [
        553,
        554
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2870": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        544,
        554
      ],
      "op": "SUB",
      "path": "10"
    },
    "2871": {
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB57"
    },
    "2874": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "op": "POP"
    },
    "2877": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 39,
      "value": "0x40"
    },
    "2879": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2882": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2883": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "ADD",
      "path": "10"
    },
    "2884": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2885": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2886": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2887": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2889": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2890": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "ADD",
      "path": "10"
    },
    "2900": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2901": {
      "fn": "Strings.toString",
      "offset": [
        570,
        580
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2902": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        271,
        974
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        540,
        591
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        615,
        620
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2905": {
      "fn": "Strings.toString",
      "offset": [
        600,
        612
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        661,
        670
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        661,
        670
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB81"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 40
    },
    "2915": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6B"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2919": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x113B"
    },
    "2922": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        686,
        694
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        686,
        694
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 41,
      "value": "0xB7A"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2930": {
      "op": "POP"
    },
    "2931": {
      "fn": "Strings.toString",
      "offset": [
        716,
        718
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x116A"
    },
    "2937": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        708,
        718
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        708,
        718
      ],
      "op": "POP",
      "path": "10"
    },
    "2941": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB5B"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        654,
        729
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2946": {
      "fn": "Strings.toString",
      "offset": [
        738,
        757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        770,
        776
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "GT",
      "path": "10"
    },
    "2960": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2961": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB9C"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB9C"
    },
    "2968": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEC5"
    },
    "2971": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        760,
        777
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2976": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2979": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2981": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "10"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "NOT",
      "path": "10"
    },
    "2987": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "AND",
      "path": "10"
    },
    "2988": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "10"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "10"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC6"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "10"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "ADD",
      "path": "10"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3013": {
      "op": "POP"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        760,
        777
      ],
      "op": "POP",
      "path": "10"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        738,
        777
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        738,
        777
      ],
      "op": "POP",
      "path": "10"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        794,
        804
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        794,
        804
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x955"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 42,
      "value": "0xBDB"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        830,
        831
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10BA"
    },
    "3034": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        820,
        831
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        820,
        831
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3037": {
      "op": "POP"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 43,
      "value": "0xBE8"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        896,
        898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        888,
        893
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x117E"
    },
    "3047": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        888,
        898
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        888,
        898
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF3"
    },
    "3052": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3053": {
      "fn": "Strings.toString",
      "offset": [
        875,
        877
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "3055": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10D1"
    },
    "3058": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        875,
        899
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        875,
        899
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        862,
        901
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xF8"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        862,
        901
      ],
      "op": "SHL",
      "path": "10"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        845,
        851
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3064": {
      "fn": "Strings.toString",
      "offset": [
        852,
        858
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3066": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "LT",
      "path": "10"
    },
    "3069": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC08"
    },
    "3072": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC08"
    },
    "3076": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1192"
    },
    "3079": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        845,
        859
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3081": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3083": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "ADD",
      "path": "10"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        845,
        859
      ],
      "op": "ADD",
      "path": "10"
    },
    "3085": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3092": {
      "op": "SHL"
    },
    "3093": {
      "op": "SUB"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "NOT",
      "path": "10"
    },
    "3095": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "AND",
      "path": "10"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3098": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3100": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "BYTE",
      "path": "10"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3102": {
      "fn": "Strings.toString",
      "offset": [
        845,
        901
      ],
      "op": "MSTORE8",
      "path": "10"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 44,
      "value": "0xC2A"
    },
    "3107": {
      "fn": "Strings.toString",
      "offset": [
        924,
        926
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3110": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x116A"
    },
    "3113": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        915,
        926
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3114": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3115": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3116": {
      "fn": "Strings.toString",
      "offset": [
        915,
        926
      ],
      "op": "POP",
      "path": "10"
    },
    "3117": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBCA"
    },
    "3120": {
      "fn": "Strings.toString",
      "offset": [
        787,
        937
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11582,
        11586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3130": {
      "op": "SHL"
    },
    "3131": {
      "op": "SUB"
    },
    "3132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11606,
        11619
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11606,
        11619
      ],
      "op": "AND",
      "path": "2"
    },
    "3134": {
      "fn": "Address.isContract",
      "offset": [
        1078,
        1098
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "3135": {
      "fn": "Address.isContract",
      "offset": [
        1116,
        1124
      ],
      "op": "ISZERO",
      "path": "8",
      "statement": 45
    },
    "3136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11602,
        12280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD27"
    },
    "3139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11602,
        12280
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3140": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3143": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3150": {
      "op": "SHL"
    },
    "3151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3159": {
      "op": "SHL"
    },
    "3160": {
      "op": "SUB"
    },
    "3161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "AND",
      "path": "2"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x150B7A02"
    },
    "3169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11677
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC75"
    },
    "3173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3174": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3175": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11692,
        11696
      ],
      "op": "DUP10",
      "path": "2"
    },
    "3177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11692,
        11696
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11698,
        11705
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11698,
        11705
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11707,
        11712
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11707,
        11712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "2"
    },
    "3185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A8"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3192": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SUB",
      "path": "2"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "GAS",
      "path": "2"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "CALL",
      "path": "2"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "2"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "2"
    },
    "3207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "POP",
      "path": "2"
    },
    "3208": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB0"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "2"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3227": {
      "op": "NOT"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "AND",
      "path": "2"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "2"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCAD"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "ADD",
      "path": "2"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E5"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11641,
        11713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0D"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDE"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "POP",
      "path": "2"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "NOT",
      "path": "2"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ADD",
      "path": "2"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "AND",
      "path": "2"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ADD",
      "path": "2"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "ADD",
      "path": "2"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE3"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "POP",
      "path": "2"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "POP",
      "path": "2"
    },
    "3301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11884,
        11890
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11884,
        11897
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11901,
        11902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3305": {
      "branch": 60,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11884,
        11902
      ],
      "op": "SUB",
      "path": "2"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11880,
        12214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD05"
    },
    "3309": {
      "branch": 60,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11880,
        12214
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 46,
      "value": "0x40"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3313": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "ADD",
      "path": "2"
    },
    "3325": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "3328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11926,
        11986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E9"
    },
    "3332": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11926,
        11986
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11880,
        12214
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3334": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12166,
        12172
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12160,
        12173
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12151,
        12157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12147,
        12149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12143,
        12158
      ],
      "op": "ADD",
      "path": "2"
    },
    "3340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12136,
        12174
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3341": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11637,
        12228
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3348": {
      "op": "SHL"
    },
    "3349": {
      "op": "SUB"
    },
    "3350": {
      "op": "NOT"
    },
    "3351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11763,
        11818
      ],
      "op": "AND",
      "path": "2",
      "statement": 47
    },
    "3352": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11763,
        11818
      ],
      "op": "EQ",
      "path": "2"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11763,
        11818
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3362": {
      "op": "POP"
    },
    "3363": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11756,
        11818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x955"
    },
    "3366": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11756,
        11818
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3367": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11602,
        12280
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12265,
        12269
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0x1"
    },
    "3371": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3373": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "2"
    },
    "3374": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "2"
    },
    "3375": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "2"
    },
    "3376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11462,
        12286
      ],
      "op": "POP",
      "path": "2"
    },
    "3377": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11462,
        12286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3378": {
      "op": "JUMPDEST"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3385": {
      "op": "SHL"
    },
    "3386": {
      "op": "SUB"
    },
    "3387": {
      "op": "NOT"
    },
    "3388": {
      "op": "DUP2"
    },
    "3389": {
      "op": "AND"
    },
    "3390": {
      "op": "DUP2"
    },
    "3391": {
      "op": "EQ"
    },
    "3392": {
      "op": "PUSH2",
      "value": "0xD48"
    },
    "3395": {
      "op": "JUMPI"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3398": {
      "op": "DUP1"
    },
    "3399": {
      "op": "REVERT"
    },
    "3400": {
      "op": "JUMPDEST"
    },
    "3401": {
      "op": "POP"
    },
    "3402": {
      "jump": "o",
      "op": "JUMP"
    },
    "3403": {
      "op": "JUMPDEST"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3408": {
      "op": "DUP3"
    },
    "3409": {
      "op": "DUP5"
    },
    "3410": {
      "op": "SUB"
    },
    "3411": {
      "op": "SLT"
    },
    "3412": {
      "op": "ISZERO"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xD5D"
    },
    "3416": {
      "op": "JUMPI"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3419": {
      "op": "DUP1"
    },
    "3420": {
      "op": "REVERT"
    },
    "3421": {
      "op": "JUMPDEST"
    },
    "3422": {
      "op": "DUP2"
    },
    "3423": {
      "op": "CALLDATALOAD"
    },
    "3424": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "3427": {
      "op": "DUP2"
    },
    "3428": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "3431": {
      "jump": "i",
      "op": "JUMP"
    },
    "3432": {
      "op": "JUMPDEST"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3435": {
      "op": "JUMPDEST"
    },
    "3436": {
      "op": "DUP4"
    },
    "3437": {
      "op": "DUP2"
    },
    "3438": {
      "op": "LT"
    },
    "3439": {
      "op": "ISZERO"
    },
    "3440": {
      "op": "PUSH2",
      "value": "0xD83"
    },
    "3443": {
      "op": "JUMPI"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "DUP2"
    },
    "3446": {
      "op": "ADD"
    },
    "3447": {
      "op": "MLOAD"
    },
    "3448": {
      "op": "DUP4"
    },
    "3449": {
      "op": "DUP3"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "op": "MSTORE"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3454": {
      "op": "ADD"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0xD6B"
    },
    "3458": {
      "op": "JUMP"
    },
    "3459": {
      "op": "JUMPDEST"
    },
    "3460": {
      "op": "DUP4"
    },
    "3461": {
      "op": "DUP2"
    },
    "3462": {
      "op": "GT"
    },
    "3463": {
      "op": "ISZERO"
    },
    "3464": {
      "op": "PUSH2",
      "value": "0x70A"
    },
    "3467": {
      "op": "JUMPI"
    },
    "3468": {
      "op": "POP"
    },
    "3469": {
      "op": "POP"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3472": {
      "op": "SWAP2"
    },
    "3473": {
      "op": "ADD"
    },
    "3474": {
      "op": "MSTORE"
    },
    "3475": {
      "jump": "o",
      "op": "JUMP"
    },
    "3476": {
      "op": "JUMPDEST"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3479": {
      "op": "DUP2"
    },
    "3480": {
      "op": "MLOAD"
    },
    "3481": {
      "op": "DUP1"
    },
    "3482": {
      "op": "DUP5"
    },
    "3483": {
      "op": "MSTORE"
    },
    "3484": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "3487": {
      "op": "DUP2"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3490": {
      "op": "DUP7"
    },
    "3491": {
      "op": "ADD"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3494": {
      "op": "DUP7"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "3499": {
      "jump": "i",
      "op": "JUMP"
    },
    "3500": {
      "op": "JUMPDEST"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3503": {
      "op": "ADD"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3506": {
      "op": "NOT"
    },
    "3507": {
      "op": "AND"
    },
    "3508": {
      "op": "SWAP3"
    },
    "3509": {
      "op": "SWAP1"
    },
    "3510": {
      "op": "SWAP3"
    },
    "3511": {
      "op": "ADD"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3514": {
      "op": "ADD"
    },
    "3515": {
      "op": "SWAP3"
    },
    "3516": {
      "op": "SWAP2"
    },
    "3517": {
      "op": "POP"
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "jump": "o",
      "op": "JUMP"
    },
    "3520": {
      "op": "JUMPDEST"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3523": {
      "op": "DUP2"
    },
    "3524": {
      "op": "MSTORE"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3527": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3532": {
      "op": "DUP4"
    },
    "3533": {
      "op": "ADD"
    },
    "3534": {
      "op": "DUP5"
    },
    "3535": {
      "op": "PUSH2",
      "value": "0xD94"
    },
    "3538": {
      "jump": "i",
      "op": "JUMP"
    },
    "3539": {
      "op": "JUMPDEST"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3544": {
      "op": "DUP3"
    },
    "3545": {
      "op": "DUP5"
    },
    "3546": {
      "op": "SUB"
    },
    "3547": {
      "op": "SLT"
    },
    "3548": {
      "op": "ISZERO"
    },
    "3549": {
      "op": "PUSH2",
      "value": "0xDE5"
    },
    "3552": {
      "op": "JUMPI"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3555": {
      "op": "DUP1"
    },
    "3556": {
      "op": "REVERT"
    },
    "3557": {
      "op": "JUMPDEST"
    },
    "3558": {
      "op": "POP"
    },
    "3559": {
      "op": "CALLDATALOAD"
    },
    "3560": {
      "op": "SWAP2"
    },
    "3561": {
      "op": "SWAP1"
    },
    "3562": {
      "op": "POP"
    },
    "3563": {
      "jump": "o",
      "op": "JUMP"
    },
    "3564": {
      "op": "JUMPDEST"
    },
    "3565": {
      "op": "DUP1"
    },
    "3566": {
      "op": "CALLDATALOAD"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3573": {
      "op": "SHL"
    },
    "3574": {
      "op": "SUB"
    },
    "3575": {
      "op": "DUP2"
    },
    "3576": {
      "op": "AND"
    },
    "3577": {
      "op": "DUP2"
    },
    "3578": {
      "op": "EQ"
    },
    "3579": {
      "op": "PUSH2",
      "value": "0xE03"
    },
    "3582": {
      "op": "JUMPI"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3585": {
      "op": "DUP1"
    },
    "3586": {
      "op": "REVERT"
    },
    "3587": {
      "op": "JUMPDEST"
    },
    "3588": {
      "op": "SWAP2"
    },
    "3589": {
      "op": "SWAP1"
    },
    "3590": {
      "op": "POP"
    },
    "3591": {
      "jump": "o",
      "op": "JUMP"
    },
    "3592": {
      "op": "JUMPDEST"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3595": {
      "op": "DUP1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3598": {
      "op": "DUP4"
    },
    "3599": {
      "op": "DUP6"
    },
    "3600": {
      "op": "SUB"
    },
    "3601": {
      "op": "SLT"
    },
    "3602": {
      "op": "ISZERO"
    },
    "3603": {
      "op": "PUSH2",
      "value": "0xE1B"
    },
    "3606": {
      "op": "JUMPI"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3609": {
      "op": "DUP1"
    },
    "3610": {
      "op": "REVERT"
    },
    "3611": {
      "op": "JUMPDEST"
    },
    "3612": {
      "op": "PUSH2",
      "value": "0xE24"
    },
    "3615": {
      "op": "DUP4"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3619": {
      "jump": "i",
      "op": "JUMP"
    },
    "3620": {
      "op": "JUMPDEST"
    },
    "3621": {
      "op": "SWAP5"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3624": {
      "op": "SWAP4"
    },
    "3625": {
      "op": "SWAP1"
    },
    "3626": {
      "op": "SWAP4"
    },
    "3627": {
      "op": "ADD"
    },
    "3628": {
      "op": "CALLDATALOAD"
    },
    "3629": {
      "op": "SWAP4"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "op": "POP"
    },
    "3632": {
      "op": "POP"
    },
    "3633": {
      "jump": "o",
      "op": "JUMP"
    },
    "3634": {
      "op": "JUMPDEST"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3637": {
      "op": "DUP1"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3642": {
      "op": "DUP5"
    },
    "3643": {
      "op": "DUP7"
    },
    "3644": {
      "op": "SUB"
    },
    "3645": {
      "op": "SLT"
    },
    "3646": {
      "op": "ISZERO"
    },
    "3647": {
      "op": "PUSH2",
      "value": "0xE47"
    },
    "3650": {
      "op": "JUMPI"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3653": {
      "op": "DUP1"
    },
    "3654": {
      "op": "REVERT"
    },
    "3655": {
      "op": "JUMPDEST"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "3659": {
      "op": "DUP5"
    },
    "3660": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3663": {
      "jump": "i",
      "op": "JUMP"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "op": "SWAP3"
    },
    "3666": {
      "op": "POP"
    },
    "3667": {
      "op": "PUSH2",
      "value": "0xE5E"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3672": {
      "op": "DUP6"
    },
    "3673": {
      "op": "ADD"
    },
    "3674": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3677": {
      "jump": "i",
      "op": "JUMP"
    },
    "3678": {
      "op": "JUMPDEST"
    },
    "3679": {
      "op": "SWAP2"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3683": {
      "op": "DUP5"
    },
    "3684": {
      "op": "ADD"
    },
    "3685": {
      "op": "CALLDATALOAD"
    },
    "3686": {
      "op": "SWAP1"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "op": "SWAP3"
    },
    "3689": {
      "op": "POP"
    },
    "3690": {
      "op": "SWAP3"
    },
    "3691": {
      "op": "POP"
    },
    "3692": {
      "op": "SWAP3"
    },
    "3693": {
      "jump": "o",
      "op": "JUMP"
    },
    "3694": {
      "op": "JUMPDEST"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3699": {
      "op": "DUP3"
    },
    "3700": {
      "op": "DUP5"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "op": "SLT"
    },
    "3703": {
      "op": "ISZERO"
    },
    "3704": {
      "op": "PUSH2",
      "value": "0xE80"
    },
    "3707": {
      "op": "JUMPI"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3710": {
      "op": "DUP1"
    },
    "3711": {
      "op": "REVERT"
    },
    "3712": {
      "op": "JUMPDEST"
    },
    "3713": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3720": {
      "jump": "i",
      "op": "JUMP"
    },
    "3721": {
      "op": "JUMPDEST"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3724": {
      "op": "DUP1"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3727": {
      "op": "DUP4"
    },
    "3728": {
      "op": "DUP6"
    },
    "3729": {
      "op": "SUB"
    },
    "3730": {
      "op": "SLT"
    },
    "3731": {
      "op": "ISZERO"
    },
    "3732": {
      "op": "PUSH2",
      "value": "0xE9C"
    },
    "3735": {
      "op": "JUMPI"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3738": {
      "op": "DUP1"
    },
    "3739": {
      "op": "REVERT"
    },
    "3740": {
      "op": "JUMPDEST"
    },
    "3741": {
      "op": "PUSH2",
      "value": "0xEA5"
    },
    "3744": {
      "op": "DUP4"
    },
    "3745": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3748": {
      "jump": "i",
      "op": "JUMP"
    },
    "3749": {
      "op": "JUMPDEST"
    },
    "3750": {
      "op": "SWAP2"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3754": {
      "op": "DUP4"
    },
    "3755": {
      "op": "ADD"
    },
    "3756": {
      "op": "CALLDATALOAD"
    },
    "3757": {
      "op": "DUP1"
    },
    "3758": {
      "op": "ISZERO"
    },
    "3759": {
      "op": "ISZERO"
    },
    "3760": {
      "op": "DUP2"
    },
    "3761": {
      "op": "EQ"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xEBA"
    },
    "3765": {
      "op": "JUMPI"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "op": "DUP1"
    },
    "3769": {
      "op": "REVERT"
    },
    "3770": {
      "op": "JUMPDEST"
    },
    "3771": {
      "op": "DUP1"
    },
    "3772": {
      "op": "SWAP2"
    },
    "3773": {
      "op": "POP"
    },
    "3774": {
      "op": "POP"
    },
    "3775": {
      "op": "SWAP3"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "op": "SWAP3"
    },
    "3778": {
      "op": "SWAP1"
    },
    "3779": {
      "op": "POP"
    },
    "3780": {
      "jump": "o",
      "op": "JUMP"
    },
    "3781": {
      "op": "JUMPDEST"
    },
    "3782": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3789": {
      "op": "SHL"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "MSTORE"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3797": {
      "op": "MSTORE"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3802": {
      "op": "REVERT"
    },
    "3803": {
      "op": "JUMPDEST"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3806": {
      "op": "DUP1"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3809": {
      "op": "DUP1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3812": {
      "op": "DUP6"
    },
    "3813": {
      "op": "DUP8"
    },
    "3814": {
      "op": "SUB"
    },
    "3815": {
      "op": "SLT"
    },
    "3816": {
      "op": "ISZERO"
    },
    "3817": {
      "op": "PUSH2",
      "value": "0xEF1"
    },
    "3820": {
      "op": "JUMPI"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3823": {
      "op": "DUP1"
    },
    "3824": {
      "op": "REVERT"
    },
    "3825": {
      "op": "JUMPDEST"
    },
    "3826": {
      "op": "PUSH2",
      "value": "0xEFA"
    },
    "3829": {
      "op": "DUP6"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3833": {
      "jump": "i",
      "op": "JUMP"
    },
    "3834": {
      "op": "JUMPDEST"
    },
    "3835": {
      "op": "SWAP4"
    },
    "3836": {
      "op": "POP"
    },
    "3837": {
      "op": "PUSH2",
      "value": "0xF08"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3842": {
      "op": "DUP7"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3847": {
      "jump": "i",
      "op": "JUMP"
    },
    "3848": {
      "op": "JUMPDEST"
    },
    "3849": {
      "op": "SWAP3"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3853": {
      "op": "DUP6"
    },
    "3854": {
      "op": "ADD"
    },
    "3855": {
      "op": "CALLDATALOAD"
    },
    "3856": {
      "op": "SWAP2"
    },
    "3857": {
      "op": "POP"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3860": {
      "op": "DUP6"
    },
    "3861": {
      "op": "ADD"
    },
    "3862": {
      "op": "CALLDATALOAD"
    },
    "3863": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3872": {
      "op": "DUP1"
    },
    "3873": {
      "op": "DUP3"
    },
    "3874": {
      "op": "GT"
    },
    "3875": {
      "op": "ISZERO"
    },
    "3876": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "3879": {
      "op": "JUMPI"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3882": {
      "op": "DUP1"
    },
    "3883": {
      "op": "REVERT"
    },
    "3884": {
      "op": "JUMPDEST"
    },
    "3885": {
      "op": "DUP2"
    },
    "3886": {
      "op": "DUP8"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "op": "SWAP2"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "op": "DUP8"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3893": {
      "op": "DUP4"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "SLT"
    },
    "3896": {
      "op": "PUSH2",
      "value": "0xF40"
    },
    "3899": {
      "op": "JUMPI"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3902": {
      "op": "DUP1"
    },
    "3903": {
      "op": "REVERT"
    },
    "3904": {
      "op": "JUMPDEST"
    },
    "3905": {
      "op": "DUP2"
    },
    "3906": {
      "op": "CALLDATALOAD"
    },
    "3907": {
      "op": "DUP2"
    },
    "3908": {
      "op": "DUP2"
    },
    "3909": {
      "op": "GT"
    },
    "3910": {
      "op": "ISZERO"
    },
    "3911": {
      "op": "PUSH2",
      "value": "0xF52"
    },
    "3914": {
      "op": "JUMPI"
    },
    "3915": {
      "op": "PUSH2",
      "value": "0xF52"
    },
    "3918": {
      "op": "PUSH2",
      "value": "0xEC5"
    },
    "3921": {
      "jump": "i",
      "op": "JUMP"
    },
    "3922": {
      "op": "JUMPDEST"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3925": {
      "op": "MLOAD"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3928": {
      "op": "DUP3"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3932": {
      "op": "NOT"
    },
    "3933": {
      "op": "SWAP1"
    },
    "3934": {
      "op": "DUP2"
    },
    "3935": {
      "op": "AND"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3938": {
      "op": "ADD"
    },
    "3939": {
      "op": "AND"
    },
    "3940": {
      "op": "DUP2"
    },
    "3941": {
      "op": "ADD"
    },
    "3942": {
      "op": "SWAP1"
    },
    "3943": {
      "op": "DUP4"
    },
    "3944": {
      "op": "DUP3"
    },
    "3945": {
      "op": "GT"
    },
    "3946": {
      "op": "DUP2"
    },
    "3947": {
      "op": "DUP4"
    },
    "3948": {
      "op": "LT"
    },
    "3949": {
      "op": "OR"
    },
    "3950": {
      "op": "ISZERO"
    },
    "3951": {
      "op": "PUSH2",
      "value": "0xF7A"
    },
    "3954": {
      "op": "JUMPI"
    },
    "3955": {
      "op": "PUSH2",
      "value": "0xF7A"
    },
    "3958": {
      "op": "PUSH2",
      "value": "0xEC5"
    },
    "3961": {
      "jump": "i",
      "op": "JUMP"
    },
    "3962": {
      "op": "JUMPDEST"
    },
    "3963": {
      "op": "DUP2"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3966": {
      "op": "MSTORE"
    },
    "3967": {
      "op": "DUP3"
    },
    "3968": {
      "op": "DUP2"
    },
    "3969": {
      "op": "MSTORE"
    },
    "3970": {
      "op": "DUP11"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3973": {
      "op": "DUP5"
    },
    "3974": {
      "op": "DUP8"
    },
    "3975": {
      "op": "ADD"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "GT"
    },
    "3978": {
      "op": "ISZERO"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xF93"
    },
    "3982": {
      "op": "JUMPI"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3985": {
      "op": "DUP1"
    },
    "3986": {
      "op": "REVERT"
    },
    "3987": {
      "op": "JUMPDEST"
    },
    "3988": {
      "op": "DUP3"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3991": {
      "op": "DUP7"
    },
    "3992": {
      "op": "ADD"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3995": {
      "op": "DUP4"
    },
    "3996": {
      "op": "ADD"
    },
    "3997": {
      "op": "CALLDATACOPY"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4002": {
      "op": "DUP5"
    },
    "4003": {
      "op": "DUP4"
    },
    "4004": {
      "op": "ADD"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "MSTORE"
    },
    "4007": {
      "op": "DUP1"
    },
    "4008": {
      "op": "SWAP6"
    },
    "4009": {
      "op": "POP"
    },
    "4010": {
      "op": "POP"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "op": "POP"
    },
    "4015": {
      "op": "SWAP3"
    },
    "4016": {
      "op": "SWAP6"
    },
    "4017": {
      "op": "SWAP2"
    },
    "4018": {
      "op": "SWAP5"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "SWAP3"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "jump": "o",
      "op": "JUMP"
    },
    "4023": {
      "op": "JUMPDEST"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4029": {
      "op": "DUP4"
    },
    "4030": {
      "op": "DUP6"
    },
    "4031": {
      "op": "SUB"
    },
    "4032": {
      "op": "SLT"
    },
    "4033": {
      "op": "ISZERO"
    },
    "4034": {
      "op": "PUSH2",
      "value": "0xFCA"
    },
    "4037": {
      "op": "JUMPI"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4040": {
      "op": "DUP1"
    },
    "4041": {
      "op": "REVERT"
    },
    "4042": {
      "op": "JUMPDEST"
    },
    "4043": {
      "op": "PUSH2",
      "value": "0xFD3"
    },
    "4046": {
      "op": "DUP4"
    },
    "4047": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "4050": {
      "jump": "i",
      "op": "JUMP"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "op": "SWAP2"
    },
    "4053": {
      "op": "POP"
    },
    "4054": {
      "op": "PUSH2",
      "value": "0xFE1"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4059": {
      "op": "DUP5"
    },
    "4060": {
      "op": "ADD"
    },
    "4061": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "4064": {
      "jump": "i",
      "op": "JUMP"
    },
    "4065": {
      "op": "JUMPDEST"
    },
    "4066": {
      "op": "SWAP1"
    },
    "4067": {
      "op": "POP"
    },
    "4068": {
      "op": "SWAP3"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "op": "SWAP3"
    },
    "4071": {
      "op": "SWAP1"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "jump": "o",
      "op": "JUMP"
    },
    "4074": {
      "op": "JUMPDEST"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4077": {
      "op": "DUP2"
    },
    "4078": {
      "op": "DUP2"
    },
    "4079": {
      "op": "SHR"
    },
    "4080": {
      "op": "SWAP1"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "AND"
    },
    "4083": {
      "op": "DUP1"
    },
    "4084": {
      "op": "PUSH2",
      "value": "0xFFE"
    },
    "4087": {
      "op": "JUMPI"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4090": {
      "op": "DUP3"
    },
    "4091": {
      "op": "AND"
    },
    "4092": {
      "op": "SWAP2"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "op": "JUMPDEST"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4097": {
      "op": "DUP3"
    },
    "4098": {
      "op": "LT"
    },
    "4099": {
      "op": "DUP2"
    },
    "4100": {
      "op": "SUB"
    },
    "4101": {
      "op": "PUSH2",
      "value": "0x101E"
    },
    "4104": {
      "op": "JUMPI"
    },
    "4105": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4112": {
      "op": "SHL"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4115": {
      "op": "MSTORE"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4120": {
      "op": "MSTORE"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4125": {
      "op": "REVERT"
    },
    "4126": {
      "op": "JUMPDEST"
    },
    "4127": {
      "op": "POP"
    },
    "4128": {
      "op": "SWAP2"
    },
    "4129": {
      "op": "SWAP1"
    },
    "4130": {
      "op": "POP"
    },
    "4131": {
      "jump": "o",
      "op": "JUMP"
    },
    "4132": {
      "op": "JUMPDEST"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4135": {
      "op": "DUP1"
    },
    "4136": {
      "op": "DUP3"
    },
    "4137": {
      "op": "MSTORE"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4140": {
      "op": "SWAP1"
    },
    "4141": {
      "op": "DUP3"
    },
    "4142": {
      "op": "ADD"
    },
    "4143": {
      "op": "MSTORE"
    },
    "4144": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4179": {
      "op": "DUP3"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "MSTORE"
    },
    "4182": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4202": {
      "op": "SHL"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4205": {
      "op": "DUP3"
    },
    "4206": {
      "op": "ADD"
    },
    "4207": {
      "op": "MSTORE"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4210": {
      "op": "ADD"
    },
    "4211": {
      "op": "SWAP1"
    },
    "4212": {
      "jump": "o",
      "op": "JUMP"
    },
    "4213": {
      "op": "JUMPDEST"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4216": {
      "op": "DUP4"
    },
    "4217": {
      "op": "MLOAD"
    },
    "4218": {
      "op": "PUSH2",
      "value": "0x1087"
    },
    "4221": {
      "op": "DUP2"
    },
    "4222": {
      "op": "DUP5"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4225": {
      "op": "DUP9"
    },
    "4226": {
      "op": "ADD"
    },
    "4227": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "4230": {
      "jump": "i",
      "op": "JUMP"
    },
    "4231": {
      "op": "JUMPDEST"
    },
    "4232": {
      "op": "DUP4"
    },
    "4233": {
      "op": "MLOAD"
    },
    "4234": {
      "op": "SWAP1"
    },
    "4235": {
      "op": "DUP4"
    },
    "4236": {
      "op": "ADD"
    },
    "4237": {
      "op": "SWAP1"
    },
    "4238": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4241": {
      "op": "DUP2"
    },
    "4242": {
      "op": "DUP4"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4245": {
      "op": "DUP9"
    },
    "4246": {
      "op": "ADD"
    },
    "4247": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "4250": {
      "jump": "i",
      "op": "JUMP"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "ADD"
    },
    "4253": {
      "op": "SWAP5"
    },
    "4254": {
      "op": "SWAP4"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "op": "POP"
    },
    "4257": {
      "op": "POP"
    },
    "4258": {
      "op": "POP"
    },
    "4259": {
      "jump": "o",
      "op": "JUMP"
    },
    "4260": {
      "op": "JUMPDEST"
    },
    "4261": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4268": {
      "op": "SHL"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4281": {
      "op": "REVERT"
    },
    "4282": {
      "op": "JUMPDEST"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "DUP3"
    },
    "4287": {
      "op": "LT"
    },
    "4288": {
      "op": "ISZERO"
    },
    "4289": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4292": {
      "op": "JUMPI"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4296": {
      "op": "PUSH2",
      "value": "0x10A4"
    },
    "4299": {
      "jump": "i",
      "op": "JUMP"
    },
    "4300": {
      "op": "JUMPDEST"
    },
    "4301": {
      "op": "POP"
    },
    "4302": {
      "op": "SUB"
    },
    "4303": {
      "op": "SWAP1"
    },
    "4304": {
      "jump": "o",
      "op": "JUMP"
    },
    "4305": {
      "op": "JUMPDEST"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4308": {
      "op": "DUP3"
    },
    "4309": {
      "op": "NOT"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "GT"
    },
    "4312": {
      "op": "ISZERO"
    },
    "4313": {
      "op": "PUSH2",
      "value": "0x10E4"
    },
    "4316": {
      "op": "JUMPI"
    },
    "4317": {
      "op": "PUSH2",
      "value": "0x10E4"
    },
    "4320": {
      "op": "PUSH2",
      "value": "0x10A4"
    },
    "4323": {
      "jump": "i",
      "op": "JUMP"
    },
    "4324": {
      "op": "JUMPDEST"
    },
    "4325": {
      "op": "POP"
    },
    "4326": {
      "op": "ADD"
    },
    "4327": {
      "op": "SWAP1"
    },
    "4328": {
      "jump": "o",
      "op": "JUMP"
    },
    "4329": {
      "op": "JUMPDEST"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4332": {
      "op": "DUP1"
    },
    "4333": {
      "op": "DUP3"
    },
    "4334": {
      "op": "MSTORE"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4337": {
      "op": "SWAP1"
    },
    "4338": {
      "op": "DUP3"
    },
    "4339": {
      "op": "ADD"
    },
    "4340": {
      "op": "MSTORE"
    },
    "4341": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4376": {
      "op": "DUP3"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "MSTORE"
    },
    "4379": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4400": {
      "op": "SHL"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "ADD"
    },
    "4405": {
      "op": "MSTORE"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "SWAP1"
    },
    "4410": {
      "jump": "o",
      "op": "JUMP"
    },
    "4411": {
      "op": "JUMPDEST"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "DUP3"
    },
    "4417": {
      "op": "ADD"
    },
    "4418": {
      "op": "PUSH2",
      "value": "0x114D"
    },
    "4421": {
      "op": "JUMPI"
    },
    "4422": {
      "op": "PUSH2",
      "value": "0x114D"
    },
    "4425": {
      "op": "PUSH2",
      "value": "0x10A4"
    },
    "4428": {
      "jump": "i",
      "op": "JUMP"
    },
    "4429": {
      "op": "JUMPDEST"
    },
    "4430": {
      "op": "POP"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4433": {
      "op": "ADD"
    },
    "4434": {
      "op": "SWAP1"
    },
    "4435": {
      "jump": "o",
      "op": "JUMP"
    },
    "4436": {
      "op": "JUMPDEST"
    },
    "4437": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4444": {
      "op": "SHL"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4447": {
      "op": "MSTORE"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4452": {
      "op": "MSTORE"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4457": {
      "op": "REVERT"
    },
    "4458": {
      "op": "JUMPDEST"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4461": {
      "op": "DUP3"
    },
    "4462": {
      "op": "PUSH2",
      "value": "0x1179"
    },
    "4465": {
      "op": "JUMPI"
    },
    "4466": {
      "op": "PUSH2",
      "value": "0x1179"
    },
    "4469": {
      "op": "PUSH2",
      "value": "0x1154"
    },
    "4472": {
      "jump": "i",
      "op": "JUMP"
    },
    "4473": {
      "op": "JUMPDEST"
    },
    "4474": {
      "op": "POP"
    },
    "4475": {
      "op": "DIV"
    },
    "4476": {
      "op": "SWAP1"
    },
    "4477": {
      "jump": "o",
      "op": "JUMP"
    },
    "4478": {
      "op": "JUMPDEST"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4481": {
      "op": "DUP3"
    },
    "4482": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4485": {
      "op": "JUMPI"
    },
    "4486": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4489": {
      "op": "PUSH2",
      "value": "0x1154"
    },
    "4492": {
      "jump": "i",
      "op": "JUMP"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "POP"
    },
    "4495": {
      "op": "MOD"
    },
    "4496": {
      "op": "SWAP1"
    },
    "4497": {
      "jump": "o",
      "op": "JUMP"
    },
    "4498": {
      "op": "JUMPDEST"
    },
    "4499": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4506": {
      "op": "SHL"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4509": {
      "op": "MSTORE"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4514": {
      "op": "MSTORE"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4519": {
      "op": "REVERT"
    },
    "4520": {
      "op": "JUMPDEST"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "op": "SUB"
    },
    "4529": {
      "op": "DUP6"
    },
    "4530": {
      "op": "DUP2"
    },
    "4531": {
      "op": "AND"
    },
    "4532": {
      "op": "DUP3"
    },
    "4533": {
      "op": "MSTORE"
    },
    "4534": {
      "op": "DUP5"
    },
    "4535": {
      "op": "AND"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4538": {
      "op": "DUP3"
    },
    "4539": {
      "op": "ADD"
    },
    "4540": {
      "op": "MSTORE"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4543": {
      "op": "DUP2"
    },
    "4544": {
      "op": "ADD"
    },
    "4545": {
      "op": "DUP4"
    },
    "4546": {
      "op": "SWAP1"
    },
    "4547": {
      "op": "MSTORE"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4552": {
      "op": "DUP3"
    },
    "4553": {
      "op": "ADD"
    },
    "4554": {
      "op": "DUP2"
    },
    "4555": {
      "op": "SWAP1"
    },
    "4556": {
      "op": "MSTORE"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4559": {
      "op": "SWAP1"
    },
    "4560": {
      "op": "PUSH2",
      "value": "0x11DB"
    },
    "4563": {
      "op": "SWAP1"
    },
    "4564": {
      "op": "DUP4"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "DUP5"
    },
    "4567": {
      "op": "PUSH2",
      "value": "0xD94"
    },
    "4570": {
      "jump": "i",
      "op": "JUMP"
    },
    "4571": {
      "op": "JUMPDEST"
    },
    "4572": {
      "op": "SWAP7"
    },
    "4573": {
      "op": "SWAP6"
    },
    "4574": {
      "op": "POP"
    },
    "4575": {
      "op": "POP"
    },
    "4576": {
      "op": "POP"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "jump": "o",
      "op": "JUMP"
    },
    "4581": {
      "op": "JUMPDEST"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4586": {
      "op": "DUP3"
    },
    "4587": {
      "op": "DUP5"
    },
    "4588": {
      "op": "SUB"
    },
    "4589": {
      "op": "SLT"
    },
    "4590": {
      "op": "ISZERO"
    },
    "4591": {
      "op": "PUSH2",
      "value": "0x11F7"
    },
    "4594": {
      "op": "JUMPI"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4597": {
      "op": "DUP1"
    },
    "4598": {
      "op": "REVERT"
    },
    "4599": {
      "op": "JUMPDEST"
    },
    "4600": {
      "op": "DUP2"
    },
    "4601": {
      "op": "MLOAD"
    },
    "4602": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "4605": {
      "op": "DUP2"
    },
    "4606": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "4609": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "2ef99f377a60dab94be744350d80223746d48b2e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping (uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping (address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC721).interfaceId\n            || interfaceId == type(IERC721Metadata).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\n            : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n     * in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    // solhint-disable-next-line no-inline-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n",
  "sourceMap": "554:12423:2:-:0;;;1321:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1388:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1411:17:2;;;;:7;;:17;;;;;:::i;:::-;;1321:114;;554:12423;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;554:12423:2;;;-1:-1:-1;554:12423:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:18;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:18;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:18;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:18:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:18;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;554:12423:2;;;;;;",
  "sourcePath": "/home/lbstr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}